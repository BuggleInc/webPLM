{
  "id" : "recursion.hanoi.CyclicHanoi",
  "name" : "CyclicHanoi",
  "tabName" : "CyclicHanoi",
  "defaultSourceFiles" : {
    "Java" : {
      "name" : "CyclicHanoi",
      "body" : "void clockwise(int height, int src, int mid, int dst) {\n}\n",
      "template" : "$package   import plm.universe.hanoi.HanoiEntity;  public class CyclicHanoi extends HanoiEntity { \tpublic void move(int from, int to) { \t\t \t\tcyclicMove(from,to); \t} \t \tpublic void run() { \t\tclockwise(getSlotSize((Integer)getParam(0)), (Integer)getParam(0), (Integer)getParam(1),(Integer)getParam(2)); \t}  $body  } ",
      "offset" : 1,
      "correction" : "$package \n\nimport plm.universe.hanoi.HanoiEntity;\n\npublic class CyclicHanoi extends HanoiEntity {\n\n\tpublic void move(int from, int to) {\n\t\t\n\t\tcyclicMove(from,to);\n\t}\n\t\n\tpublic void run() {\n\t\tclockwise(getSlotSize((Integer)getParam(0)), (Integer)getParam(0), (Integer)getParam(1),(Integer)getParam(2));\n\t}\n\n\t/* BEGIN TEMPLATE */\n\tvoid clockwise(int height, int src, int mid, int dst) {\n\t\t/* BEGIN SOLUTION */\n\t\tif (height > 0) {\n\t\t\t\n\t\t\tanti(height-1,src,dst,mid);\n\t\t\tmove(src,dst);\n\t\t\tanti(height-1,mid,src,dst);\n\t\t\t\n\t\t}\n\t}\n\tvoid anti(int height, int src, int mid, int dst) {\n\t\tif (height > 0) {\t\t\n\t\t\t\n\t\t\tanti(height-1,src,mid,dst);\n\t\t\tmove(src,mid);\n\t\t\tclockwise(height-1,dst,mid,src);\t\t\t\n\t\t\tmove(mid,dst);\n\t\t\tanti(height-1,src,mid,dst);\n\t\t\t\n\t\t}\n\t\t/* END SOLUTION */\n\t}\n\t/* END TEMPLATE */\n\n}\n",
      "error" : "Error"
    },
    "Scala" : {
      "name" : "CyclicHanoi",
      "body" : "def clockwise(height:Int, src:Int, mid:Int, dst:Int) {\n}\n",
      "template" : "$package \n\nimport plm.universe.hanoi.HanoiEntity\n\nclass CyclicHanoi extends HanoiEntity {  override def move(from:Int, to:Int) = cyclicMove(from, to)\n  \n\toverride def run() {\n    val src=getParam(0).asInstanceOf[Int]\n    val mid=getParam(1).asInstanceOf[Int]\n    val dst=getParam(2).asInstanceOf[Int]\n\t\tclockwise(getSlotSize(src), src,mid,dst);\n\t}\n\n$body\n\n}\n",
      "offset" : 12,
      "correction" : "$package \n\nimport plm.universe.hanoi.HanoiEntity\n\nclass CyclicHanoi extends HanoiEntity {\n  override def move(from:Int, to:Int) = cyclicMove(from, to)\n  \n\toverride def run() {\n    val src=getParam(0).asInstanceOf[Int]\n    val mid=getParam(1).asInstanceOf[Int]\n    val dst=getParam(2).asInstanceOf[Int]\n\t\tclockwise(getSlotSize(src), src,mid,dst);\n\t}\n\n\t/* BEGIN TEMPLATE */\n\tdef clockwise(height:Int, src:Int, mid:Int, dst:Int) {\n\t\t/* BEGIN SOLUTION */\n\t\tif (height>0) {\n      anti(height-1,src,dst,mid);\n      move(src,dst);\n      anti(height-1,mid,src,dst);\n\t\t}\n  }\n  def anti(height:Int, src:Int, mid:Int, dst:Int) {\n\t  if (height > 0) {   \n      //System.err.println(\"beg counterclockwise(\"+height+\",\"+src+\",\"+mid+\",\"+dst+\")\");\n      anti(height-1,src,mid,dst);\n      move(src,mid);\n      clockwise(height-1,dst,mid,src);      \n      move(mid,dst);\n      anti(height-1,src,mid,dst);\n      //System.err.println(\"end counterclockwise(\"+height+\",\"+src+\",\"+mid+\",\"+dst+\")\");\n    }\n\t\t/* END SOLUTION */\n\t}\n\t/* END TEMPLATE */\n\n}\n",
      "error" : "Error"
    },
    "Python" : {
      "name" : "CyclicHanoi",
      "body" : "def clockwise(height, src,mid,dst):\n\t\n\t# Your code here\n",
      "template" : "def move(src,dst):\n\tentity.cyclicMove(src,dst)\n\n$body\nclockwise(getSlotSize(getParam(0)), getParam(0),getParam(1),getParam(2))\n",
      "offset" : 2,
      "correction" : "def move(src,dst):\n\tentity.cyclicMove(src,dst)\n\n# BEGIN TEMPLATE\ndef clockwise(height, src,mid,dst):\n\t\n\t# Your code here\n\t# BEGIN SOLUTION\n\tif height != 0:\n\t\tanti(height-1,src,dst,mid);\n\t\tmove(src,dst);\n\t\tanti(height-1,mid,src,dst);\ndef anti(height, src,mid,dst):\n\tif height != 0:\n\t\tanti(height-1,src,mid,dst);\n\t\tmove(src,mid);\n\t\tclockwise(height-1,dst,mid,src);\t\t\t\n\t\tmove(mid,dst);\n\t\tanti(height-1,src,mid,dst);\n\t# END SOLUTION\n# END TEMPLATE\nclockwise(getSlotSize(getParam(0)), getParam(0),getParam(1),getParam(2))\n",
      "error" : "Error"
    }
  },
  "helps" : {
    "en" : "<!-- Please don't translate this file but l10n/missions/plm.pot (see https://github.com/oster/PLM/wiki/Working-on-translations) -->\n<h1>HanoiWorld</h1>\n\n<p>\nThis world implements the ultra-classical Hanoi problem. You are asked\nto move the disk pile from the stick where they are to the target\nstick (given as second parameter in the world's name -- number 1 for\nthe default world). There is some extra constraint: you can only move\none disk at a time, and you cannot move a big disk over a smaller\none.</p>\n\n<p>Only 4 functions are provided:</p>\n\n<pre>[!java|c]void [/!]move([!java|c]int [/!]src, [!java|c]int [/!]dst)</pre>\n\nMoves one disk from the stick <code>src</code> onto the stick\n<code>dst</code>. If you try to do an invalid move (like laying a disk\nover a smaller one), an IllegalArgumentException is thrown. \n\n<pre>[!java|c]int [/!]getSlotSize([!java|c]int [/!]slot)[!scala]:Int[/!]</pre>\nReturns the amount of disks placed on the specified slot. This is mainly \nused to initialize the recursion and set the amount of recursive call to execute.\n\n<pre>[!java|c]int [/!]getSlotRadius([!java|c]int [/!]slot)[!scala]:Int[/!]</pre>\nReturns the radius of the top-most disk of the specified slot.\n\n<pre>[!java]boolean [/!][!c]int [/!]isSelected()[!scala]:Boolean[/!]</pre>\nReturns whether the current world is selected in the graphical interface.\n",
    "fr" : "\n<!-- Please don't translate this file but l10n/missions/plm.pot (see https://github.com/oster/PLM/wiki/Working-on-translations) -->\n<h1>Le monde des tours de Hanoï</h1>\n\n<p>\nCe monde implémente le problème ultra classique de Hanoï. Il vous est\ndemandé de déplacer une pile de disques du piquet où ils se trouvent vers un\npiquet cible (passé comme second paramètre dans le nom du monde -- numéro 1\npour le monde par défaut). Il y a quelques contraintes supplémentaires: il\nest interdit de déplacer plus d'un disque à la fois, ainsi que de placer un\ndisque plus grand sur un disque plus petit.</p>\n\n<p>Seules quatre fonctions sont fournies&nbsp;:</p>\n\n<pre>[!java|c]void [/!]deplace([!java|c]int [/!]src, [!java|c]int [/!]dst)</pre>\n\nElle déplace un disque d'un piquet <code>src</code> vers le piquet\n<code>dst</code>. Si vous demandez un déplacement invalide (comme le\nplacement d'un disque sur un disque plus petit), une exception\nIllegalArgumentException est levée. \n\n<pre>[!java|c]int [/!]getTaillePiquet([!java|c]int [/!]slot)[!scala]:Int[/!]</pre>\nRetourne le nombre de disques placés sur un piquet donné. Cette fonction est\nsurtout utile pour initialiser la récursion et déterminer le nombre d'appels\nrécursifs à réaliser.\n\n<pre>[!java|c]int [/!]getRayonPiquet([!java|c]int [/!]slot)[!scala]:Int[/!]</pre>\nRetourne le rayon du disque placé en haut du piquet spécifié.\n\n<pre>[!java]boolean [/!][!c]int [/!]estChoisie()[!scala]:Boolean[/!]</pre>\nRenvoi si le monde actuel est sélectionné dans l'interface graphique.\n"
  },
  "instructions" : {
    "en" : "<!-- Please don't translate this file but l10n/missions/plm.pot (see https://github.com/oster/PLM/wiki/Working-on-translations) -->\n<h2>Cyclic Towers of Hanoi</h2>\n\n<p>This variation of the Towers of Hanoi is very similar to the\nregular problem: you are given one stack of disks and three pegs, and you cannot move a larger disk over a smaller one.\nThe change is that you can only move disks clockwise: 0->1 or 1->2 or 2->0, but never in the other direction.</p>\n\n<p>Obviously, the movements are not symmetric anymore. Moves from A to B are now very different from moves to B to A.\nAs a result, you need two recursive functions depending on whether you are moving the stack clockwise or counterclockwise.</p>\n\n<p>That being said, the problem decomposition is very similar to the\nclassical Hanoi. The twist is that each function call the other one, \nconstituting a nice example of mutual recursion.</p>\n",
    "fr" : "\n<!-- Please don't translate this file but l10n/missions/plm.pot (see https://github.com/oster/PLM/wiki/Working-on-translations) -->\n<h2>Les tours de Hanoï cycliques</h2>\n\n<p>Cette variante des tours de Hanoï est très similaire au problème de base :\nvous avez une pile de disques, trois piquets et il est interdit de placer un\ngros disque sur un disque plus petit. La nouveauté est que vous ne pouvez\nbouger les disques que dans un seul sens : 0->1 ou 1->2 ou 2->0, mais jamais\ndans l'autre sens.</p>\n\n<p>Manifestement, les mouvements ne sont plus symétriques. Déplacer un disque\nde A vers B est maintenant très différent de le déplacer de B vers A. Du\ncoup, vous aurez besoin de deux fonctions récursives permettant\nrespectivement de déplacer la pile dans le sens indiqué\n(<code>clockwise</code>), ou dans l'autre sens.</p>\n\n<p>Ceci étant, la décomposition récursive du problème est très similaire à\ncelle du problème classique. Simplement, chacune des deux fonctions appelle\nl'autre, constituant un bel exemple de récursivité mutuelle.</p>\n"
  },
  "initialWorlds" : [ {
    "type" : "plm.universe.hanoi.HanoiWorld",
    "@jsonId" : 1,
    "name" : "solve(0,2,1), 5 disks",
    "entities" : [ {
      "type" : "plm.universe.hanoi.HanoiEntity",
      "name" : "worker",
      "world" : 1,
      "inited" : false
    } ],
    "steps" : [ ],
    "about" : "<!-- Please don't translate this file but l10n/missions/plm.pot (see https://github.com/oster/PLM/wiki/Working-on-translations) -->\n<h1>HanoiWorld</h1>\n\n<p>\nThis world implements the ultra-classical Hanoi problem. You are asked\nto move the disk pile from the stick where they are to the target\nstick (given as second parameter in the world's name -- number 1 for\nthe default world). There is some extra constraint: you can only move\none disk at a time, and you cannot move a big disk over a smaller\none.</p>\n\n<p>Only 4 functions are provided:</p>\n\n<pre>void move(int src, int dst)</pre>\n\nMoves one disk from the stick <code>src</code> onto the stick\n<code>dst</code>. If you try to do an invalid move (like laying a disk\nover a smaller one), an IllegalArgumentException is thrown. \n\n<pre>int getSlotSize(int slot)</pre>\nReturns the amount of disks placed on the specified slot. This is mainly \nused to initialize the recursion and set the amount of recursive call to execute.\n\n<pre>int getSlotRadius(int slot)</pre>\nReturns the radius of the top-most disk of the specified slot.\n\n<pre>boolean isSelected()</pre>\nReturns whether the current world is selected in the graphical interface.\n",
    "parameters" : [ 0, 2, 1 ],
    "slots" : [ [ {
      "size" : 5,
      "color" : [ 255, 255, 0, 255 ]
    }, {
      "size" : 4,
      "color" : [ 255, 255, 0, 255 ]
    }, {
      "size" : 3,
      "color" : [ 255, 255, 0, 255 ]
    }, {
      "size" : 2,
      "color" : [ 255, 255, 0, 255 ]
    }, {
      "size" : 1,
      "color" : [ 255, 255, 0, 255 ]
    } ], [ ], [ ] ],
    "moveCount" : 0
  }, {
    "type" : "plm.universe.hanoi.HanoiWorld",
    "@jsonId" : 2,
    "name" : "solve(0,2,1), 4 disks",
    "entities" : [ {
      "type" : "plm.universe.hanoi.HanoiEntity",
      "name" : "worker",
      "world" : 2,
      "inited" : false
    } ],
    "steps" : [ ],
    "about" : "<!-- Please don't translate this file but l10n/missions/plm.pot (see https://github.com/oster/PLM/wiki/Working-on-translations) -->\n<h1>HanoiWorld</h1>\n\n<p>\nThis world implements the ultra-classical Hanoi problem. You are asked\nto move the disk pile from the stick where they are to the target\nstick (given as second parameter in the world's name -- number 1 for\nthe default world). There is some extra constraint: you can only move\none disk at a time, and you cannot move a big disk over a smaller\none.</p>\n\n<p>Only 4 functions are provided:</p>\n\n<pre>void move(int src, int dst)</pre>\n\nMoves one disk from the stick <code>src</code> onto the stick\n<code>dst</code>. If you try to do an invalid move (like laying a disk\nover a smaller one), an IllegalArgumentException is thrown. \n\n<pre>int getSlotSize(int slot)</pre>\nReturns the amount of disks placed on the specified slot. This is mainly \nused to initialize the recursion and set the amount of recursive call to execute.\n\n<pre>int getSlotRadius(int slot)</pre>\nReturns the radius of the top-most disk of the specified slot.\n\n<pre>boolean isSelected()</pre>\nReturns whether the current world is selected in the graphical interface.\n",
    "parameters" : [ 0, 2, 1 ],
    "slots" : [ [ {
      "size" : 4,
      "color" : [ 255, 255, 0, 255 ]
    }, {
      "size" : 3,
      "color" : [ 255, 255, 0, 255 ]
    }, {
      "size" : 2,
      "color" : [ 255, 255, 0, 255 ]
    }, {
      "size" : 1,
      "color" : [ 255, 255, 0, 255 ]
    } ], [ ], [ ] ],
    "moveCount" : 0
  }, {
    "type" : "plm.universe.hanoi.HanoiWorld",
    "@jsonId" : 3,
    "name" : "solve(0,2,1), 3 disks",
    "entities" : [ {
      "type" : "plm.universe.hanoi.HanoiEntity",
      "name" : "worker",
      "world" : 3,
      "inited" : false
    } ],
    "steps" : [ ],
    "about" : "<!-- Please don't translate this file but l10n/missions/plm.pot (see https://github.com/oster/PLM/wiki/Working-on-translations) -->\n<h1>HanoiWorld</h1>\n\n<p>\nThis world implements the ultra-classical Hanoi problem. You are asked\nto move the disk pile from the stick where they are to the target\nstick (given as second parameter in the world's name -- number 1 for\nthe default world). There is some extra constraint: you can only move\none disk at a time, and you cannot move a big disk over a smaller\none.</p>\n\n<p>Only 4 functions are provided:</p>\n\n<pre>void move(int src, int dst)</pre>\n\nMoves one disk from the stick <code>src</code> onto the stick\n<code>dst</code>. If you try to do an invalid move (like laying a disk\nover a smaller one), an IllegalArgumentException is thrown. \n\n<pre>int getSlotSize(int slot)</pre>\nReturns the amount of disks placed on the specified slot. This is mainly \nused to initialize the recursion and set the amount of recursive call to execute.\n\n<pre>int getSlotRadius(int slot)</pre>\nReturns the radius of the top-most disk of the specified slot.\n\n<pre>boolean isSelected()</pre>\nReturns whether the current world is selected in the graphical interface.\n",
    "parameters" : [ 0, 2, 1 ],
    "slots" : [ [ {
      "size" : 3,
      "color" : [ 255, 255, 0, 255 ]
    }, {
      "size" : 2,
      "color" : [ 255, 255, 0, 255 ]
    }, {
      "size" : 1,
      "color" : [ 255, 255, 0, 255 ]
    } ], [ ], [ ] ],
    "moveCount" : 0
  }, {
    "type" : "plm.universe.hanoi.HanoiWorld",
    "@jsonId" : 4,
    "name" : "solve(0,2,1), 2 disks",
    "entities" : [ {
      "type" : "plm.universe.hanoi.HanoiEntity",
      "name" : "worker",
      "world" : 4,
      "inited" : false
    } ],
    "steps" : [ ],
    "about" : "<!-- Please don't translate this file but l10n/missions/plm.pot (see https://github.com/oster/PLM/wiki/Working-on-translations) -->\n<h1>HanoiWorld</h1>\n\n<p>\nThis world implements the ultra-classical Hanoi problem. You are asked\nto move the disk pile from the stick where they are to the target\nstick (given as second parameter in the world's name -- number 1 for\nthe default world). There is some extra constraint: you can only move\none disk at a time, and you cannot move a big disk over a smaller\none.</p>\n\n<p>Only 4 functions are provided:</p>\n\n<pre>void move(int src, int dst)</pre>\n\nMoves one disk from the stick <code>src</code> onto the stick\n<code>dst</code>. If you try to do an invalid move (like laying a disk\nover a smaller one), an IllegalArgumentException is thrown. \n\n<pre>int getSlotSize(int slot)</pre>\nReturns the amount of disks placed on the specified slot. This is mainly \nused to initialize the recursion and set the amount of recursive call to execute.\n\n<pre>int getSlotRadius(int slot)</pre>\nReturns the radius of the top-most disk of the specified slot.\n\n<pre>boolean isSelected()</pre>\nReturns whether the current world is selected in the graphical interface.\n",
    "parameters" : [ 0, 2, 1 ],
    "slots" : [ [ {
      "size" : 2,
      "color" : [ 255, 255, 0, 255 ]
    }, {
      "size" : 1,
      "color" : [ 255, 255, 0, 255 ]
    } ], [ ], [ ] ],
    "moveCount" : 0
  } ],
  "answerWorlds" : [ {
    "type" : "plm.universe.hanoi.HanoiWorld",
    "@jsonId" : 5,
    "name" : "solve(0,2,1), 5 disks",
    "entities" : [ {
      "type" : "plm.universe.hanoi.HanoiEntity",
      "name" : "worker",
      "world" : 5,
      "inited" : true
    } ],
    "steps" : [ [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 6,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 7,
      "source" : 1,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 8,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 9,
      "source" : 2,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 10,
      "source" : 1,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 11,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 12,
      "source" : 1,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 13,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 14,
      "source" : 2,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 15,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 16,
      "source" : 2,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 17,
      "source" : 1,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 18,
      "source" : 2,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 19,
      "source" : 1,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 20,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 21,
      "source" : 1,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 22,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 23,
      "source" : 2,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 24,
      "source" : 1,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 25,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 26,
      "source" : 1,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 27,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 28,
      "source" : 2,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 29,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 30,
      "source" : 2,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 31,
      "source" : 1,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 32,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 33,
      "source" : 2,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 34,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 35,
      "source" : 2,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 36,
      "source" : 1,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 37,
      "source" : 2,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 38,
      "source" : 1,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 39,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 40,
      "source" : 2,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 41,
      "source" : 1,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 42,
      "source" : 2,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 43,
      "source" : 1,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 44,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 45,
      "source" : 1,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 46,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 47,
      "source" : 2,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 48,
      "source" : 1,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 49,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 50,
      "source" : 1,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 51,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 52,
      "source" : 2,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 53,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 54,
      "source" : 2,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 55,
      "source" : 1,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 56,
      "source" : 2,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 57,
      "source" : 1,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 58,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 59,
      "source" : 1,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 60,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 61,
      "source" : 2,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 62,
      "source" : 1,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 63,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 64,
      "source" : 1,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 65,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 66,
      "source" : 2,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 67,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 68,
      "source" : 2,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 69,
      "source" : 1,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 70,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 71,
      "source" : 2,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 72,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 73,
      "source" : 2,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 74,
      "source" : 1,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 75,
      "source" : 2,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 76,
      "source" : 1,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 77,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 78,
      "source" : 1,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 79,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 80,
      "source" : 2,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 81,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 82,
      "source" : 2,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 83,
      "source" : 1,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 84,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 85,
      "source" : 2,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 86,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 87,
      "source" : 2,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 88,
      "source" : 1,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 89,
      "source" : 2,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 90,
      "source" : 1,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 91,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 92,
      "source" : 2,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 93,
      "source" : 1,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 94,
      "source" : 2,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 95,
      "source" : 1,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 96,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 97,
      "source" : 1,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 98,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 99,
      "source" : 2,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 100,
      "source" : 1,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 101,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 102,
      "source" : 1,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 103,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 104,
      "source" : 2,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 105,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 106,
      "source" : 2,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 107,
      "source" : 1,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 108,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 109,
      "source" : 2,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 110,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 111,
      "source" : 2,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 112,
      "source" : 1,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 113,
      "source" : 2,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 114,
      "source" : 1,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 115,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 116,
      "source" : 1,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 117,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 118,
      "source" : 2,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 119,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 120,
      "source" : 2,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 121,
      "source" : 1,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 122,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 123,
      "source" : 2,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 124,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ] ],
    "about" : "<!-- Please don't translate this file but l10n/missions/plm.pot (see https://github.com/oster/PLM/wiki/Working-on-translations) -->\n<h1>HanoiWorld</h1>\n\n<p>\nThis world implements the ultra-classical Hanoi problem. You are asked\nto move the disk pile from the stick where they are to the target\nstick (given as second parameter in the world's name -- number 1 for\nthe default world). There is some extra constraint: you can only move\none disk at a time, and you cannot move a big disk over a smaller\none.</p>\n\n<p>Only 4 functions are provided:</p>\n\n<pre>void move(int src, int dst)</pre>\n\nMoves one disk from the stick <code>src</code> onto the stick\n<code>dst</code>. If you try to do an invalid move (like laying a disk\nover a smaller one), an IllegalArgumentException is thrown. \n\n<pre>int getSlotSize(int slot)</pre>\nReturns the amount of disks placed on the specified slot. This is mainly \nused to initialize the recursion and set the amount of recursive call to execute.\n\n<pre>int getSlotRadius(int slot)</pre>\nReturns the radius of the top-most disk of the specified slot.\n\n<pre>boolean isSelected()</pre>\nReturns whether the current world is selected in the graphical interface.\n",
    "parameters" : [ 0, 2, 1 ],
    "slots" : [ [ ], [ {
      "size" : 5,
      "color" : [ 255, 255, 0, 255 ]
    }, {
      "size" : 4,
      "color" : [ 255, 255, 0, 255 ]
    }, {
      "size" : 3,
      "color" : [ 255, 255, 0, 255 ]
    }, {
      "size" : 2,
      "color" : [ 255, 255, 0, 255 ]
    }, {
      "size" : 1,
      "color" : [ 255, 255, 0, 255 ]
    } ], [ ] ],
    "moveCount" : 119
  }, {
    "type" : "plm.universe.hanoi.HanoiWorld",
    "@jsonId" : 125,
    "name" : "solve(0,2,1), 4 disks",
    "entities" : [ {
      "type" : "plm.universe.hanoi.HanoiEntity",
      "name" : "worker",
      "world" : 125,
      "inited" : true
    } ],
    "steps" : [ [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 126,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 127,
      "source" : 1,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 128,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 129,
      "source" : 2,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 130,
      "source" : 1,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 131,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 132,
      "source" : 1,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 133,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 134,
      "source" : 2,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 135,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 136,
      "source" : 2,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 137,
      "source" : 1,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 138,
      "source" : 2,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 139,
      "source" : 1,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 140,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 141,
      "source" : 1,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 142,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 143,
      "source" : 2,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 144,
      "source" : 1,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 145,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 146,
      "source" : 1,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 147,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 148,
      "source" : 2,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 149,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 150,
      "source" : 2,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 151,
      "source" : 1,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 152,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 153,
      "source" : 2,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 154,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 155,
      "source" : 2,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 156,
      "source" : 1,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 157,
      "source" : 2,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 158,
      "source" : 1,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 159,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 160,
      "source" : 1,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 161,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 162,
      "source" : 2,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 163,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 164,
      "source" : 2,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 165,
      "source" : 1,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 166,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 167,
      "source" : 2,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 168,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ] ],
    "about" : "<!-- Please don't translate this file but l10n/missions/plm.pot (see https://github.com/oster/PLM/wiki/Working-on-translations) -->\n<h1>HanoiWorld</h1>\n\n<p>\nThis world implements the ultra-classical Hanoi problem. You are asked\nto move the disk pile from the stick where they are to the target\nstick (given as second parameter in the world's name -- number 1 for\nthe default world). There is some extra constraint: you can only move\none disk at a time, and you cannot move a big disk over a smaller\none.</p>\n\n<p>Only 4 functions are provided:</p>\n\n<pre>void move(int src, int dst)</pre>\n\nMoves one disk from the stick <code>src</code> onto the stick\n<code>dst</code>. If you try to do an invalid move (like laying a disk\nover a smaller one), an IllegalArgumentException is thrown. \n\n<pre>int getSlotSize(int slot)</pre>\nReturns the amount of disks placed on the specified slot. This is mainly \nused to initialize the recursion and set the amount of recursive call to execute.\n\n<pre>int getSlotRadius(int slot)</pre>\nReturns the radius of the top-most disk of the specified slot.\n\n<pre>boolean isSelected()</pre>\nReturns whether the current world is selected in the graphical interface.\n",
    "parameters" : [ 0, 2, 1 ],
    "slots" : [ [ ], [ {
      "size" : 4,
      "color" : [ 255, 255, 0, 255 ]
    }, {
      "size" : 3,
      "color" : [ 255, 255, 0, 255 ]
    }, {
      "size" : 2,
      "color" : [ 255, 255, 0, 255 ]
    }, {
      "size" : 1,
      "color" : [ 255, 255, 0, 255 ]
    } ], [ ] ],
    "moveCount" : 43
  }, {
    "type" : "plm.universe.hanoi.HanoiWorld",
    "@jsonId" : 169,
    "name" : "solve(0,2,1), 3 disks",
    "entities" : [ {
      "type" : "plm.universe.hanoi.HanoiEntity",
      "name" : "worker",
      "world" : 169,
      "inited" : true
    } ],
    "steps" : [ [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 170,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 171,
      "source" : 1,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 172,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 173,
      "source" : 2,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 174,
      "source" : 1,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 175,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 176,
      "source" : 1,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 177,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 178,
      "source" : 2,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 179,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 180,
      "source" : 2,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 181,
      "source" : 1,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 182,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 183,
      "source" : 2,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 184,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ] ],
    "about" : "<!-- Please don't translate this file but l10n/missions/plm.pot (see https://github.com/oster/PLM/wiki/Working-on-translations) -->\n<h1>HanoiWorld</h1>\n\n<p>\nThis world implements the ultra-classical Hanoi problem. You are asked\nto move the disk pile from the stick where they are to the target\nstick (given as second parameter in the world's name -- number 1 for\nthe default world). There is some extra constraint: you can only move\none disk at a time, and you cannot move a big disk over a smaller\none.</p>\n\n<p>Only 4 functions are provided:</p>\n\n<pre>void move(int src, int dst)</pre>\n\nMoves one disk from the stick <code>src</code> onto the stick\n<code>dst</code>. If you try to do an invalid move (like laying a disk\nover a smaller one), an IllegalArgumentException is thrown. \n\n<pre>int getSlotSize(int slot)</pre>\nReturns the amount of disks placed on the specified slot. This is mainly \nused to initialize the recursion and set the amount of recursive call to execute.\n\n<pre>int getSlotRadius(int slot)</pre>\nReturns the radius of the top-most disk of the specified slot.\n\n<pre>boolean isSelected()</pre>\nReturns whether the current world is selected in the graphical interface.\n",
    "parameters" : [ 0, 2, 1 ],
    "slots" : [ [ ], [ {
      "size" : 3,
      "color" : [ 255, 255, 0, 255 ]
    }, {
      "size" : 2,
      "color" : [ 255, 255, 0, 255 ]
    }, {
      "size" : 1,
      "color" : [ 255, 255, 0, 255 ]
    } ], [ ] ],
    "moveCount" : 15
  }, {
    "type" : "plm.universe.hanoi.HanoiWorld",
    "@jsonId" : 185,
    "name" : "solve(0,2,1), 2 disks",
    "entities" : [ {
      "type" : "plm.universe.hanoi.HanoiEntity",
      "name" : "worker",
      "world" : 185,
      "inited" : true
    } ],
    "steps" : [ [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 186,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 187,
      "source" : 1,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 188,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 189,
      "source" : 2,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 190,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ] ],
    "about" : "<!-- Please don't translate this file but l10n/missions/plm.pot (see https://github.com/oster/PLM/wiki/Working-on-translations) -->\n<h1>HanoiWorld</h1>\n\n<p>\nThis world implements the ultra-classical Hanoi problem. You are asked\nto move the disk pile from the stick where they are to the target\nstick (given as second parameter in the world's name -- number 1 for\nthe default world). There is some extra constraint: you can only move\none disk at a time, and you cannot move a big disk over a smaller\none.</p>\n\n<p>Only 4 functions are provided:</p>\n\n<pre>void move(int src, int dst)</pre>\n\nMoves one disk from the stick <code>src</code> onto the stick\n<code>dst</code>. If you try to do an invalid move (like laying a disk\nover a smaller one), an IllegalArgumentException is thrown. \n\n<pre>int getSlotSize(int slot)</pre>\nReturns the amount of disks placed on the specified slot. This is mainly \nused to initialize the recursion and set the amount of recursive call to execute.\n\n<pre>int getSlotRadius(int slot)</pre>\nReturns the radius of the top-most disk of the specified slot.\n\n<pre>boolean isSelected()</pre>\nReturns whether the current world is selected in the graphical interface.\n",
    "parameters" : [ 0, 2, 1 ],
    "slots" : [ [ ], [ {
      "size" : 2,
      "color" : [ 255, 255, 0, 255 ]
    }, {
      "size" : 1,
      "color" : [ 255, 255, 0, 255 ]
    } ], [ ] ],
    "moveCount" : 5
  } ]
}