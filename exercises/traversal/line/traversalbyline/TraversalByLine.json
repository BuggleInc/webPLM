{
  "id" : "traversal.line.traversalbyline.TraversalByLine",
  "name" : "TraversalByLine",
  "tabName" : "LineByLine",
  "defaultSourceFiles" : {
    "Java" : {
      "name" : "TraversalByLine",
      "body" : "public void run() {\n}\n",
      "template" : "$package   import plm.core.model.I18nManager; import plm.universe.bugglequest.SimpleBuggle;  public class TraversalByLine extends SimpleBuggle {$body  \t@Override \tpublic void forward(int i)  {  \t\tthrow new RuntimeException(I18nManager.getI18n(getWorld().getLocale()).tr(\"Sorry Dave, I cannot let you use forward() in this exercise. Use setPos(x,y) instead.\")); \t} \t@Override \tpublic void forward()  { \t\tif (isInited()) \t\t\tthrow new RuntimeException(I18nManager.getI18n(getWorld().getLocale()).tr(\"Sorry Dave, I cannot let you use forward() in this exercise. Use setPos(x,y) instead.\")); \t} \t@Override \tpublic void backward(int i) { \t\tthrow new RuntimeException(I18nManager.getI18n(getWorld().getLocale()).tr(\"Sorry Dave, I cannot let you use backward() in this exercise. Use setPos(x,y) instead.\")); \t} \t@Override \tpublic void backward() { \t\tthrow new RuntimeException(I18nManager.getI18n(getWorld().getLocale()).tr(\"Sorry Dave, I cannot let you use backward() in this exercise. Use setPos(x,y) instead.\")); \t} } ",
      "offset" : 1,
      "correction" : "$package \n\nimport plm.core.model.I18nManager;\nimport plm.universe.bugglequest.AbstractBuggle;\n\npublic class TraversalByLine extends AbstractBuggle {\n\t/* BEGIN TEMPLATE */\n\tpublic void run() {\n\t\t/* BEGIN SOLUTION */\n\t\tint cpt=0;\n\t\tdo {\n\t\t\twriteMessage(cpt);\n\t\t\tnextStep();\n\t\t\tcpt++;\n\t\t} while (!endingPosition());\n\t\twriteMessage(cpt);\n\t}\n\n\tpublic void nextStep() {\n\t\tint x=getX();\n\t\tint y=getY();\n\t\tif (x < getWorldWidth()-1) {\n\t\t\tx++;\n\t\t} else {\n\t\t\tx = 0; \n\t\t\tif (y < getWorldHeight()-1) {\n\t\t\t\ty++; \n\t\t\t} else {\n\t\t\t\ty = 0;\n\t\t\t}\n\t\t}\n\t\tsetPos(x,y);\n\t}\n\n\tpublic boolean endingPosition() {\n\t\treturn (getX() == getWorldWidth()-1) && (getY() == getWorldHeight()-1);\n\t\t/* END SOLUTION */\n\t}\n\t/* END TEMPLATE */\t\n\n\t@Override\n\tpublic void forward(int i)  { \n\t\tthrow new RuntimeException(I18nManager.getI18n(getWorld().getLocale()).tr(\"Sorry Dave, I cannot let you use forward() in this exercise. Use setPos(x,y) instead.\"));\n\t}\n\t@Override\n\tpublic void forward()  {\n\t\tif (isInited())\n\t\t\tthrow new RuntimeException(I18nManager.getI18n(getWorld().getLocale()).tr(\"Sorry Dave, I cannot let you use forward() in this exercise. Use setPos(x,y) instead.\"));\n\t}\n\t@Override\n\tpublic void backward(int i) {\n\t\tthrow new RuntimeException(I18nManager.getI18n(getWorld().getLocale()).tr(\"Sorry Dave, I cannot let you use backward() in this exercise. Use setPos(x,y) instead.\"));\n\t}\n\t@Override\n\tpublic void backward() {\n\t\tthrow new RuntimeException(I18nManager.getI18n(getWorld().getLocale()).tr(\"Sorry Dave, I cannot let you use backward() in this exercise. Use setPos(x,y) instead.\"));\n\t}\n}\n",
      "error" : "Error"
    },
    "Scala" : {
      "name" : "TraversalByLine",
      "body" : "override def run() {\n}\n",
      "template" : "$package \n\nimport plm.universe.bugglequest.SimpleBuggle;\nimport plm.core.model.I18nManager\n\nclass TraversalByLine extends SimpleBuggle {$body\n\n\n\toverride def forward(i:Int)  { \n\t\tthrow new RuntimeException(I18nManager.getI18n(getWorld.getLocale).tr(\"Sorry Dave, I cannot let you use forward() in this exercise. Use setPos(x,y) instead.\"));\n\t}\n\toverride def forward()  {\n\t\tthrow new RuntimeException(I18nManager.getI18n(getWorld.getLocale).tr(\"Sorry Dave, I cannot let you use forward() in this exercise. Use setPos(x,y) instead.\"));\n\t}\n\toverride def backward(i:Int) {\n\t\tthrow new RuntimeException(I18nManager.getI18n(getWorld.getLocale).tr(\"Sorry Dave, I cannot let you use backward() in this exercise. Use setPos(x,y) instead.\"));\n\t}\n\toverride def backward() {\n\t\tthrow new RuntimeException(I18nManager.getI18n(getWorld.getLocale).tr(\"Sorry Dave, I cannot let you use backward() in this exercise. Use setPos(x,y) instead.\"));\n\t}\n}\n",
      "offset" : 6,
      "correction" : "$package \n\nimport plm.universe.bugglequest.AbstractBuggle;\nimport plm.core.model.I18nManager\n\nclass TraversalByLine extends AbstractBuggle {\n\t/* BEGIN TEMPLATE */\n\toverride def run() {\n\t\t/* BEGIN SOLUTION */\n\t\tvar cpt=0;\n\t\tdo {\n\t\t\twriteMessage(cpt);\n\t\t\tnextStep();\n\t\t\tcpt+=1;\n\t\t} while (!endingPosition());\n\t\twriteMessage(cpt);\n\t}\n\n\tdef nextStep() {\n\t\tvar x=getX();\n\t\tvar y=getY();\n\t\tif (x < getWorldWidth()-1) {\n\t\t\tx+=1;\n\t\t} else {\n\t\t\tx = 0; \n\t\t\tif (y < getWorldHeight()-1) {\n\t\t\t\ty+=1; \n\t\t\t} else {\n\t\t\t\ty = 0;\n\t\t\t}\n\t\t}\n\t\tsetPos(x,y);\n\t}\n\n\tdef endingPosition():Boolean = {\n\t\treturn (getX() == getWorldWidth()-1) && (getY() == getWorldHeight()-1);\n\t\t/* END SOLUTION */\n\t}\n\t/* END TEMPLATE */\t\n\n\n\toverride def forward(i:Int)  { \n\t\tthrow new RuntimeException(I18nManager.getI18n(getWorld.getLocale).tr(\"Sorry Dave, I cannot let you use forward() in this exercise. Use setPos(x,y) instead.\"));\n\t}\n\toverride def forward()  {\n\t\tthrow new RuntimeException(I18nManager.getI18n(getWorld.getLocale).tr(\"Sorry Dave, I cannot let you use forward() in this exercise. Use setPos(x,y) instead.\"));\n\t}\n\toverride def backward(i:Int) {\n\t\tthrow new RuntimeException(I18nManager.getI18n(getWorld.getLocale).tr(\"Sorry Dave, I cannot let you use backward() in this exercise. Use setPos(x,y) instead.\"));\n\t}\n\toverride def backward() {\n\t\tthrow new RuntimeException(I18nManager.getI18n(getWorld.getLocale).tr(\"Sorry Dave, I cannot let you use backward() in this exercise. Use setPos(x,y) instead.\"));\n\t}\n}\n",
      "error" : "Error"
    },
    "Python" : {
      "name" : "TraversalByLine",
      "body" : "",
      "template" : "def forward(i):\n\terrorMsg(\"Sorry Dave, I cannot let you use forward() in this exercise. Use setPos(x,y) instead.\")\n\ndef backward(i):\n\terrorMsg(\"Sorry Dave, I cannot let you use backward() in this exercise. Use setPos(x,y) instead.\")\n\n$body\n",
      "offset" : 5,
      "correction" : "def forward(i):\n\terrorMsg(\"Sorry Dave, I cannot let you use forward() in this exercise. Use setPos(x,y) instead.\")\n\ndef backward(i):\n\terrorMsg(\"Sorry Dave, I cannot let you use backward() in this exercise. Use setPos(x,y) instead.\")\n\n# BEGIN SOLUTION\n\ndef nextStep():\n\tx = getX()\n\ty = getY()\n\t\n\tif (x < getWorldWidth()-1):\n\t\tx += 1\n\telse:\n\t\tx = 0 \n\t\tif (y < getWorldHeight()-1):\n\t\t\ty += 1\n\t\telse:\n\t\t\ty = 0\n\tsetPos(x,y)\n\ncpt=0;\nwriteMessage(cpt)\nwhile not (getX() == getWorldWidth()-1 and getY() == getWorldHeight()-1):\n\tnextStep();\n\tcpt += 1\n\twriteMessage(cpt);\n# END SOLUTION\n",
      "error" : "Error"
    }
  },
  "helps" : {
    "en" : "<!-- Please don't translate this file but l10n/missions/plm.pot (see https://github.com/oster/PLM/wiki/Working-on-translations) -->\n<h1>BuggleWorld</h1>\nThis world was invented by Lyn Turbak, at Wellesley College. It is full of\nBuggles, little animals understanding simple orders, and offers numerous\npossibilities of interaction with the world: taking or dropping objects,\npaint the ground, hit walls, etc.\n\n<h2>Methods understood by buggles</h2>\n<table border=1>\n<tr><td colspan=2 align=center><b>Moving</b><br/> (See also the note on exceptions, below)</td></tr>\n  <tr><td><b>Turn left<br/>Turn right<br/>Turn back<br/>Moving forward<br/>Moving back</b></td>\n      <td>[!java|c]void [/!]left()<br/>\n          [!java|c]void [/!]right()<br/>\n          [!java|c]void [/!]back()<br/>\n          [!java|c]void [/!][!python|java|scala]forward()[/!][!c]stepForward()[/!] or [!java|c]void [/!]forward([!java|c]int [/!]steps[!scala]:Int[/!])<br/>\n          [!java|c]void [/!][!python|java|scala]backward()[/!][!c]stepBackward()[/!] or [!java]void [/!]backward([!java|c]int [/!]steps[!scala]:Int[/!])<br/></td></tr>\n  <tr><td><b>Get X coordinate<br/>Get Y coordinate<br/>Set X coordinate<br/>Set Y coordinate<br/>Set position</b></td>\n      <td>[!java|c]int [/!]getX()[!scala]:Int[/!]<br/>\n          [!java|c]int [/!]getY()[!scala]:Int[/!]<br/>\n          [!java|c]void [/!]setX([!java|c]int [/!]x[!scala]:Int[/!])<br/>\n          [!java|c]void [/!]setY([!java|c]int [/!]y[!scala]:Int[/!])<br/>\n          [!java|c]void [/!]setPos([!java|c]int [/!]x[!scala]:Int[/!], [!java|c]int [/!]y[!scala]:Int[/!])</td></tr>\n<tr><td colspan=2>Note that the point (0,0) is on the top left corner, as it is often the case in Computer Science.</td></tr>\n\n<tr><td colspan=2 align=center><b>Information on the buggle</b></td></tr>\n  <tr><td><b>Get the color of the body<br/>Set the color of the body</b></td>\n      <td>[!java|c]Color [/!]getBodyColor()[!scala]:Color[/!]<br/>\n          [!java|c]void [/!]setBodyColor([!java|c]Color [/!]c[!scala]:Color[/!])</td></tr>\t\t\t\t\n  <tr><td><b>Look for a wall forward<br/>Look for a wall backward</b></td>\n      <td>[!java]boolean [/!][!c]int [/!]isFacingWall()[!scala]:Boolean[/!]<br/>\n          [!java]boolean [/!][!c]int [/!]isBackingWall()[!scala]:Boolean[/!]</td></tr>\t\t\t\t\n  <tr><td><b>Get heading<br/>Set heading</b><br/>valid directions are:</td>\n      <td>[!java|c]Direction [/!]getDirection()[!scala]:Direction[/!]<br/>\n          [!java|c]void [/!]setDirection([!java|c]Direction [/!]dir[!scala]:Direction[/!])<br/>\n          [!scala|java|python]Direction.[/!]NORTH, [!scala|java|python]Direction.[/!]EAST, [!scala|java|python]Direction.[/!]SOUTH and [!scala|java|python]Direction.[/!]WEST</td></tr>\n  <tr><td>Check whether the buggle is currently <b>selected in the interface</b></td>\n      <td>[!java]boolean [/!][!c]int [/!]isSelected()[!scala]:Boolean[/!]</td></tr>\n \n<tr><td colspan=2 align=center><b>About the brush</b></td></tr>\n  <tr><td><b>Brush down<br/>Brush up<br/>Get brush position</b></td>\n      <td>[!java|c]void [/!]brushUp()<br/>\n          [!java|c]void [/!]brushDown()<br/>\n          [!java]boolean [/!][!c]int [/!]isBrushDown()[!scala]:Boolean[/!]</td></tr>\n  <tr><td><b>Change the brush color<br/>Get the color of the brush</b></td>\n      <td>[!java|c]void [/!]setBrushColor([!java|c]Color [/!]c[!scala]:Color[/!])<br/>\n          [!java|c]Color [/!]getBrushColor()[!scala]:Color[/!]</td></tr>\n\n<tr><td colspan=2 align=center><b>Interacting with the world</b></td></tr>\n  <tr><td><b>Get the color of the ground</b></td>\n      <td>[!java|c]Color [/!]getGroundColor()[!scala]:Color[/!]</td></tr>\n\n  <tr><td><b>Look for a baggle on the ground<br/>Look for a baggle in bag<br/>Pickup a baggle<br/>Drop a baggle</b><br/>\n      (see the note on exceptions)</td>\n      <td>[!java]boolean [/!][!c]int [/!]isOverBaggle()[!scala]:Boolean[/!]<br/>\n          [!java]boolean [/!][!c]int [/!]isCarryingBaggle()[!scala]:Boolean[/!]<br/>\n          [!java]void [/!]pickupBaggle()<br/>\n          [!java]void [/!]dropBaggle()<br/>\n          &nbsp;</td></tr>\n\n  <tr><td><b>Look for a message<br/>Add a message<br/>Read the message<br/>Erase the message</b></td>\n      <td>[!java]boolean [/!][!c]int [/!]isOverMessage()[!scala]:Boolean[/!]<br/>\n          [!java]void [/!]writeMessage([!java]String [/!][!c]char* [/!]msg[!scala]:String[/!])<br/>\n          [!java]String [/!][!c]char* [/!]readMessage()[!scala]:String[/!]<br/>\n          [!java]void [/!]clearMessage()</td></tr>\n</table>\n\n<h2>Valid colors</h2>\n<table border=1>\n<tr><td>Name</td><td>Color</td></tr>\n<tr><td>[!scala|java|python]Color.[/!]black</td>    <td BGCOLOR=\"#000000\">&nbsp;</td></tr>\n<tr><td>[!scala|java|python]Color.[/!]blue</td>     <td BGCOLOR=\"#0000FF\">&nbsp;</td></tr>\n<tr><td>[!scala|java|python]Color.[/!]cyan</td>     <td BGCOLOR=\"#00FFFF\">&nbsp;</td></tr>\n<tr><td>[!scala|java|python]Color.[/!]darkGray</td> <td BGCOLOR=\"#404040\">&nbsp;</td></tr>\n<tr><td>[!scala|java|python]Color.[/!]gray</td>     <td BGCOLOR=\"#808080\">&nbsp;</td></tr>\n<tr><td>[!scala|java|python]Color.[/!]green</td>    <td BGCOLOR=\"#00FF00\">&nbsp;</td></tr>\n<tr><td>[!scala|java|python]Color.[/!]lightGray</td><td BGCOLOR=\"#C0C0C0\">&nbsp;</td></tr>\n<tr><td>[!scala|java|python]Color.[/!]magenta</td>  <td BGCOLOR=\"#FF00FF\">&nbsp;</td></tr>\n<tr><td>[!scala|java|python]Color.[/!]orange</td>   <td BGCOLOR=\"#FFC800\">&nbsp;</td></tr>\n<tr><td>[!scala|java|python]Color.[/!]pink</td>     <td BGCOLOR=\"#FFAFAF\">&nbsp;</td></tr>\n<tr><td>[!scala|java|python]Color.[/!]red</td>      <td BGCOLOR=\"#FF0000\">&nbsp;</td></tr>\n<tr><td>[!scala|java|python]Color.[/!]white</td>    <td BGCOLOR=\"#FFFFFF\">&nbsp;</td></tr>\n<tr><td>[!scala|java|python]Color.[/!]yellow</td>   <td BGCOLOR=\"#FFFF00\">&nbsp;</td></tr>\n</table>\n\n<h2>Note on exceptions</h2>\nRegular buggles throw a BuggleWallException exception if you ask them to\ntraverse a wall.  They throw a NoBaggleUnderBuggleException exception if you\nask them to pickup a baggle from an empty cell, or a\nAlreadyHaveBaggleException exception if they already carry a baggle.  Trying\nto drop a baggle on a cell already containing one throws an\nAlreadyHaveBaggleException exception. \nDropping a baggle when you have none throws a DontHaveBaggleException.\n<p>SimpleBuggles (ie, the one used in first exercises) display an error message\non problem so that you don't need to know what an exception is.</p>\n",
    "fr" : "\n<!-- Please don't translate this file but l10n/missions/plm.pot (see https://github.com/oster/PLM/wiki/Working-on-translations) -->\n<h1>Le monde des Buggles</h1>\nCe monde a été inventé par Lyn Turbak, du Wellesley College. Il est peuplé\nde Buggles, petites bêtes qui comprennent des ordres simples, et offre de\nnombreuses possibilités d'interaction avec le monde : prendre ou poser des\nobjets, colorier le sol, se cogner à des murs, etc.\n\n<h2>Méthodes comprises par les buggles</h2>\n<table border=1>\n<tr><td colspan=2 align=center><b>Bouger</b><br/> (voir aussi la note sur les exceptions, plus bas)</td></tr>\n  <tr><td><b>Tourner à gauche<br/>Tourner à droite<br/>Se retourner<br/>Avancer<br/>Reculer</b></td>\n      <td>[!java|c]void [/!]gauche()<br/>\n          [!java|c]void [/!]droite()<br/>\n          [!java|c]void [/!]retourne()<br/>\n          [!java|c]void [/!][!python|java|scala]avance()[/!][!c]avancePas()[/!] or\n[!java|c]void [/!]avance([!java|c]int [/!]nbPas[!scala]:Int[/!])<br/>\n          [!java|c]void [/!][!python|java|scala]recule()[/!][!c]reculePas()[/!] or\n[!java]void [/!]recule([!java|c]int [/!]nbPas[!scala]:Int[/!])<br/></td></tr>\n  <tr><td><b>Obtenir l'abscisse<br/>Obtenir l'ordonnée<br/>Changer l'abscisse<br/>Changer l'ordonnée<br/>Changer la position</b></td>\n      <td>[!java|c]int [/!]getX()[!scala]:Int[/!]<br/>\n          [!java|c]int [/!]getY()[!scala]:Int[/!]<br/>\n          [!java|c]void [/!]setX([!java|c]int [/!]x[!scala]:Int[/!])<br/>\n          [!java|c]void [/!]setY([!java|c]int [/!]y[!scala]:Int[/!])<br/>\n          [!java|c]void [/!]setPos([!java|c]int [/!]x[!scala]:Int[/!], [!java|c]int\n[/!]y[!scala]:Int[/!])</td></tr>\n<tr><td colspan=2>L'origine (0, 0) est dans le coin en haut à gauche, comme c'est souvent le\ncas en informatique.</td></tr>\n\n<tr><td colspan=2 align=center><b>Informations sur la buggle</b></td></tr>\n  <tr><td><b>Obtenir la couleur de la buggle</b><br/>Changer la couleur de la buggle</b></td>\n      <td>[!java|c]Color [/!]getCouleurCorps()[!scala]:Color[/!]<br/>\n          [!java|c]void [/!]setCouleurCorps([!java|c]Color [/!]c[!scala]:Color[/!])</td></tr>\t\t\t\t\n  <tr><td><b>Chercher un mur devant<br/>Chercher un mur derrière</b></td>\n      <td>[!java]boolean [/!][!c]int [/!]estFaceMur()[!scala]:Boolean[/!]<br/>\n          [!java]boolean [/!][!c]int [/!]estDosMur()[!scala]:Boolean[/!]</td></tr>\t\t\t\t\n  <tr><td><b>Obtenir la direction<br/>Changer la direction</b><br/>Les directions valides sont :</td>\n      <td>[!java|c]Direction [/!]getDirection()[!scala]:Direction[/!]<br/>\n          [!java|c]void [/!]setDirection([!java|c]Direction\n[/!]dir[!scala]:Direction[/!])<br/>\n          [!scala|java|python]Direction.[/!]NORTH (nord),\n[!scala|java|python]Direction.[/!]EAST (est),\n[!scala|java|python]Direction.[/!]SOUTH (sud) et\n[!scala|java|python]Direction.[/!]WEST (ouest)</td></tr>\n  <tr><td>Renvoi si la buggle est actuellement <b>sélectionnée dans l'interface</b></td>\n      <td>[!java]boolean [/!][!c]int [/!]estChoisie()[!scala]:Boolean[/!]</td></tr>\n \n<tr><td colspan=2 align=center><b>À propos de la brosse</b></td></tr>\n  <tr><td><b>Baisser la brosse<br/>Lever la brosse<br/>Obtenir la position de la brosse</b></td>\n      <td>[!java|c]void [/!]leveBrosse()<br/>\n          [!java|c]void [/!]baisseBrosse()<br/>\n          [!java]boolean [/!][!c]int [/!]estBrosseBaissee()[!scala]:Boolean[/!]</td></tr>\n  <tr><td><b>Modifier la couleur de la brosse<br/>Obtenir la couleur de la brosse</b></td>\n      <td>[!java|c]void [/!]setCouleurBrosse([!java|c]Color [/!]c[!scala]:Color[/!])<br/>\n          [!java|c]Color [/!]getCouleurBrosse()[!scala]:Color[/!]</td></tr>\n\n<tr><td colspan=2 align=center><b>Interagir avec le monde</b></td></tr>\n  <tr><td><b>Obtenir la couleur du sol</b></td>\n      <td>[!java|c]Color [/!]getCouleurSol()[!scala]:Color[/!]</td></tr>\n\n  <tr><td><b>Vrai si biscuit par terre<br/>Vrai si on porte un biscuit<br/>Ramasse un biscuit<br/>Poser un biscuit</b><br/>\n      (voir la note sur les exceptions)</td>\n      <td>[!java]boolean [/!][!c]int [/!]estSurBiscuit()[!scala]:Boolean[/!]<br/>\n          [!java]boolean [/!][!c]int [/!]porteBiscuit()[!scala]:Boolean[/!]<br/>\n          [!java]void [/!]prendBiscuit()<br/>\n          [!java]void [/!]poseBiscuit()<br/>\n          &nbsp;</td></tr>\n\n  <tr><td><b>Chercher un message<br/>Ajouter un message<br/>Lire le message<br/>Effacer le message</b></td>\n      <td>[!java]boolean [/!][!c]int [/!]estSurMessage()[!scala]:Boolean[/!]<br/>\n          [!java]void [/!]ecritMessage([!java]String [/!][!c]char*\n[/!]msg[!scala]:String[/!])<br/>\n          [!java]String [/!][!c]char* [/!]litMessage()[!scala]:String[/!]<br/>\n          [!java]void [/!]effaceMessage()</td></tr>\n</table>\n\n<h2>Couleurs valides</h2>\n<table border=1>\n<tr><td>Nom</td><td>Couleur</td></tr>\n<tr><td>[!scala|java|python]Color.[/!]black</td>    <td BGCOLOR=\"#000000\">&nbsp;</td></tr>\n<tr><td>[!scala|java|python]Color.[/!]blue</td>     <td BGCOLOR=\"#0000FF\">&nbsp;</td></tr>\n<tr><td>[!scala|java|python]Color.[/!]cyan</td>     <td BGCOLOR=\"#00FFFF\">&nbsp;</td></tr>\n<tr><td>[!scala|java|python]Color.[/!]darkGray</td> <td BGCOLOR=\"#404040\">&nbsp;</td></tr>\n<tr><td>[!scala|java|python]Color.[/!]gray</td>     <td BGCOLOR=\"#808080\">&nbsp;</td></tr>\n<tr><td>[!scala|java|python]Color.[/!]green</td>    <td BGCOLOR=\"#00FF00\">&nbsp;</td></tr>\n<tr><td>[!scala|java|python]Color.[/!]lightGray</td><td BGCOLOR=\"#C0C0C0\">&nbsp;</td></tr>\n<tr><td>[!scala|java|python]Color.[/!]magenta</td>  <td BGCOLOR=\"#FF00FF\">&nbsp;</td></tr>\n<tr><td>[!scala|java|python]Color.[/!]orange</td>   <td BGCOLOR=\"#FFC800\">&nbsp;</td></tr>\n<tr><td>[!scala|java|python]Color.[/!]pink</td>     <td BGCOLOR=\"#FFAFAF\">&nbsp;</td></tr>\n<tr><td>[!scala|java|python]Color.[/!]red</td>      <td BGCOLOR=\"#FF0000\">&nbsp;</td></tr>\n<tr><td>[!scala|java|python]Color.[/!]white</td>    <td BGCOLOR=\"#FFFFFF\">&nbsp;</td></tr>\n<tr><td>[!scala|java|python]Color.[/!]yellow</td>   <td BGCOLOR=\"#FFFF00\">&nbsp;</td></tr>\n</table>\n\n<h2>Note sur les exceptions</h2>\nLes buggles normales lèvent une exception BuggleWallException si on cherche\nà leur faire traverser un mur.\nElles lèvent une exception NoBaggleUnderBuggleException si vous cherchez à\nprendre un biscuit dans une case qui n'en contient pas, ou une exception\nAlreadyHaveBaggleException si vous portez déjà un biscuit.\nTenter de déposer un biscuit sur une case qui en contient déjà lève une\nexception AlreadyHaveBaggleException.\nTenter de poser un biscuit alors qu'on n'en a pas lève une exception\nDontHaveBaggleException.\n<p>Les \"SimpleBuggles\" (c.-à-d., celles utilisées dans les premiers exercices)\naffichent un message d'erreur sans que vous ayez à vous soucier de ce qu'est\nune exception.</p>\n"
  },
  "instructions" : {
    "en" : "<!-- Please don't translate this file but l10n/missions/plm.pot (see https://github.com/oster/PLM/wiki/Working-on-translations) -->\n<h2>Traversal by line</h2>\n\nYou once again have to let the buggle traverse the world numbering the cells\non its way, but the goal of this exercise is to write a line traversal. Most\nof the code you wrote for previous exercise remains usable here. Simply, the\nmethod computing the coordinates of the next buggle position has to be\ncorrectly updated: if you are at the right of a line, you have to go to the\nbeginning of the next one. If not, you have to go to the right cell.\n\n<p>Your turn...</p>\n",
    "fr" : "\n<!-- Please don't translate this file but l10n/missions/plm.pot (see https://github.com/oster/PLM/wiki/Working-on-translations) -->\n<h2>Parcours en ligne</h2>\n\nIl faut encore faire parcourir le monde à la buggle en numérotant les cases\nau passage, mais l'objectif de cet exercice est d'écrire un parcours ligne\npar ligne. La plupart du code écrit à l'exercice précédent reste utilisable,\nmais la méthode calculant les prochaines coordonnées de la buggle doit être\nmodifiée en conséquence : si l'on est tout à droite d'une ligne, il faut\naller au début de la ligne précédente. Si non, il faut aller sur la case à\ndroite.\n\n<p>À vous de jouer...</p>\n"
  },
  "initialWorlds" : [ {
    "type" : "plm.universe.bugglequest.BuggleWorld",
    "@jsonId" : 1,
    "name" : "Grid",
    "width" : 7,
    "height" : 7,
    "entities" : [ {
      "type" : "plm.universe.bugglequest.SimpleBuggle",
      "name" : "Walker",
      "x" : 0,
      "y" : 0,
      "direction" : 0,
      "bodyColor" : [ 0, 0, 0, 255 ],
      "brushColor" : [ 255, 0, 0, 255 ],
      "world" : 1,
      "inited" : false,
      "brushDown" : false
    } ],
    "steps" : [ ],
    "about" : "<!-- Please don't translate this file but l10n/missions/plm.pot (see https://github.com/oster/PLM/wiki/Working-on-translations) -->\n<h1>BuggleWorld</h1>\nThis world was invented by Lyn Turbak, at Wellesley College. It is full of\nBuggles, little animals understanding simple orders, and offers numerous\npossibilities of interaction with the world: taking or dropping objects,\npaint the ground, hit walls, etc.\n\n<h2>Methods understood by buggles</h2>\n<table border=1>\n<tr><td colspan=2 align=center><b>Moving</b><br/> (See also the note on exceptions, below)</td></tr>\n  <tr><td><b>Turn left<br/>Turn right<br/>Turn back<br/>Moving forward<br/>Moving back</b></td>\n      <td>void left()<br/>\n          void right()<br/>\n          void back()<br/>\n          void forward() or void forward(int steps)<br/>\n          void backward() or void backward(int steps)<br/></td></tr>\n  <tr><td><b>Get X coordinate<br/>Get Y coordinate<br/>Set X coordinate<br/>Set Y coordinate<br/>Set position</b></td>\n      <td>int getX()<br/>\n          int getY()<br/>\n          void setX(int x)<br/>\n          void setY(int y)<br/>\n          void setPos(int x, int y)</td></tr>\n<tr><td colspan=2>Note that the point (0,0) is on the top left corner, as it is often the case in Computer Science.</td></tr>\n\n<tr><td colspan=2 align=center><b>Information on the buggle</b></td></tr>\n  <tr><td><b>Get the color of the body<br/>Set the color of the body</b></td>\n      <td>Color getBodyColor()<br/>\n          void setBodyColor(Color c)</td></tr>\t\t\t\t\n  <tr><td><b>Look for a wall forward<br/>Look for a wall backward</b></td>\n      <td>boolean isFacingWall()<br/>\n          boolean isBackingWall()</td></tr>\t\t\t\t\n  <tr><td><b>Get heading<br/>Set heading</b><br/>valid directions are:</td>\n      <td>Direction getDirection()<br/>\n          void setDirection(Direction dir)<br/>\n          Direction.NORTH, Direction.EAST, Direction.SOUTH and Direction.WEST</td></tr>\n  <tr><td>Check whether the buggle is currently <b>selected in the interface</b></td>\n      <td>boolean isSelected()</td></tr>\n \n<tr><td colspan=2 align=center><b>About the brush</b></td></tr>\n  <tr><td><b>Brush down<br/>Brush up<br/>Get brush position</b></td>\n      <td>void brushUp()<br/>\n          void brushDown()<br/>\n          boolean isBrushDown()</td></tr>\n  <tr><td><b>Change the brush color<br/>Get the color of the brush</b></td>\n      <td>void setBrushColor(Color c)<br/>\n          Color getBrushColor()</td></tr>\n\n<tr><td colspan=2 align=center><b>Interacting with the world</b></td></tr>\n  <tr><td><b>Get the color of the ground</b></td>\n      <td>Color getGroundColor()</td></tr>\n\n  <tr><td><b>Look for a baggle on the ground<br/>Look for a baggle in bag<br/>Pickup a baggle<br/>Drop a baggle</b><br/>\n      (see the note on exceptions)</td>\n      <td>boolean isOverBaggle()<br/>\n          boolean isCarryingBaggle()<br/>\n          void pickupBaggle()<br/>\n          void dropBaggle()<br/>\n          &nbsp;</td></tr>\n\n  <tr><td><b>Look for a message<br/>Add a message<br/>Read the message<br/>Erase the message</b></td>\n      <td>boolean isOverMessage()<br/>\n          void writeMessage(String msg)<br/>\n          String readMessage()<br/>\n          void clearMessage()</td></tr>\n</table>\n\n<h2>Valid colors</h2>\n<table border=1>\n<tr><td>Name</td><td>Color</td></tr>\n<tr><td>Color.black</td>    <td BGCOLOR=\"#000000\">&nbsp;</td></tr>\n<tr><td>Color.blue</td>     <td BGCOLOR=\"#0000FF\">&nbsp;</td></tr>\n<tr><td>Color.cyan</td>     <td BGCOLOR=\"#00FFFF\">&nbsp;</td></tr>\n<tr><td>Color.darkGray</td> <td BGCOLOR=\"#404040\">&nbsp;</td></tr>\n<tr><td>Color.gray</td>     <td BGCOLOR=\"#808080\">&nbsp;</td></tr>\n<tr><td>Color.green</td>    <td BGCOLOR=\"#00FF00\">&nbsp;</td></tr>\n<tr><td>Color.lightGray</td><td BGCOLOR=\"#C0C0C0\">&nbsp;</td></tr>\n<tr><td>Color.magenta</td>  <td BGCOLOR=\"#FF00FF\">&nbsp;</td></tr>\n<tr><td>Color.orange</td>   <td BGCOLOR=\"#FFC800\">&nbsp;</td></tr>\n<tr><td>Color.pink</td>     <td BGCOLOR=\"#FFAFAF\">&nbsp;</td></tr>\n<tr><td>Color.red</td>      <td BGCOLOR=\"#FF0000\">&nbsp;</td></tr>\n<tr><td>Color.white</td>    <td BGCOLOR=\"#FFFFFF\">&nbsp;</td></tr>\n<tr><td>Color.yellow</td>   <td BGCOLOR=\"#FFFF00\">&nbsp;</td></tr>\n</table>\n\n<h2>Note on exceptions</h2>\nRegular buggles throw a BuggleWallException exception if you ask them to\ntraverse a wall.  They throw a NoBaggleUnderBuggleException exception if you\nask them to pickup a baggle from an empty cell, or a\nAlreadyHaveBaggleException exception if they already carry a baggle.  Trying\nto drop a baggle on a cell already containing one throws an\nAlreadyHaveBaggleException exception. \nDropping a baggle when you have none throws a DontHaveBaggleException.\n<p>SimpleBuggles (ie, the one used in first exercises) display an error message\non problem so that you don't need to know what an exception is.</p>\n",
    "parameters" : null,
    "cells" : [ [ {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 1,
      "x" : 0,
      "y" : 0,
      "msgColor" : [ 128, 128, 230, 255 ],
      "content" : "",
      "leftWall" : true,
      "topWall" : true
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 1,
      "x" : 0,
      "y" : 1,
      "msgColor" : [ 128, 128, 230, 255 ],
      "content" : "",
      "leftWall" : true
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 1,
      "x" : 0,
      "y" : 2,
      "msgColor" : [ 128, 128, 230, 255 ],
      "content" : "",
      "leftWall" : true
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 1,
      "x" : 0,
      "y" : 3,
      "msgColor" : [ 128, 128, 230, 255 ],
      "content" : "",
      "leftWall" : true
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 1,
      "x" : 0,
      "y" : 4,
      "msgColor" : [ 128, 128, 230, 255 ],
      "content" : "",
      "leftWall" : true
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 1,
      "x" : 0,
      "y" : 5,
      "msgColor" : [ 128, 128, 230, 255 ],
      "content" : "",
      "leftWall" : true
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 1,
      "x" : 0,
      "y" : 6,
      "msgColor" : [ 128, 128, 230, 255 ],
      "content" : "",
      "leftWall" : true
    } ], [ {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 1,
      "x" : 1,
      "y" : 0,
      "topWall" : true
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 1,
      "x" : 1,
      "y" : 1
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 1,
      "x" : 1,
      "y" : 2
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 1,
      "x" : 1,
      "y" : 3
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 1,
      "x" : 1,
      "y" : 4
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 1,
      "x" : 1,
      "y" : 5
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 1,
      "x" : 1,
      "y" : 6
    } ], [ {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 1,
      "x" : 2,
      "y" : 0,
      "topWall" : true
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 1,
      "x" : 2,
      "y" : 1
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 1,
      "x" : 2,
      "y" : 2
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 1,
      "x" : 2,
      "y" : 3
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 1,
      "x" : 2,
      "y" : 4
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 1,
      "x" : 2,
      "y" : 5
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 1,
      "x" : 2,
      "y" : 6
    } ], [ {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 1,
      "x" : 3,
      "y" : 0,
      "topWall" : true
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 1,
      "x" : 3,
      "y" : 1
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 1,
      "x" : 3,
      "y" : 2
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 1,
      "x" : 3,
      "y" : 3
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 1,
      "x" : 3,
      "y" : 4
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 1,
      "x" : 3,
      "y" : 5
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 1,
      "x" : 3,
      "y" : 6
    } ], [ {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 1,
      "x" : 4,
      "y" : 0,
      "topWall" : true
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 1,
      "x" : 4,
      "y" : 1
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 1,
      "x" : 4,
      "y" : 2
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 1,
      "x" : 4,
      "y" : 3
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 1,
      "x" : 4,
      "y" : 4
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 1,
      "x" : 4,
      "y" : 5
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 1,
      "x" : 4,
      "y" : 6
    } ], [ {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 1,
      "x" : 5,
      "y" : 0,
      "topWall" : true
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 1,
      "x" : 5,
      "y" : 1
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 1,
      "x" : 5,
      "y" : 2
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 1,
      "x" : 5,
      "y" : 3
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 1,
      "x" : 5,
      "y" : 4
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 1,
      "x" : 5,
      "y" : 5
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 1,
      "x" : 5,
      "y" : 6
    } ], [ {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 1,
      "x" : 6,
      "y" : 0,
      "topWall" : true
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 1,
      "x" : 6,
      "y" : 1
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 1,
      "x" : 6,
      "y" : 2
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 1,
      "x" : 6,
      "y" : 3
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 1,
      "x" : 6,
      "y" : 4
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 1,
      "x" : 6,
      "y" : 5
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 1,
      "x" : 6,
      "y" : 6
    } ] ],
    "visibleGrid" : true,
    "easter" : false
  } ],
  "answerWorlds" : [ {
    "type" : "plm.universe.bugglequest.BuggleWorld",
    "@jsonId" : 2,
    "name" : "Grid",
    "width" : 7,
    "height" : 7,
    "entities" : [ {
      "type" : "plm.universe.bugglequest.SimpleBuggle",
      "name" : "Walker",
      "world" : 2,
      "inited" : true,
      "bodyColor" : [ 0, 0, 0, 255 ],
      "brushColor" : [ 255, 0, 0, 255 ],
      "x" : 6,
      "y" : 6,
      "direction" : 0,
      "brushDown" : false
    } ],
    "steps" : [ [ {
      "type" : "plm.universe.bugglequest.operations.ChangeCellContent",
      "@jsonId" : 3,
      "x" : 0,
      "y" : 0,
      "oldContent" : "",
      "newContent" : "0",
      "name" : "changeCellContent"
    }, {
      "type" : "plm.universe.bugglequest.operations.ChangeCellHasContent",
      "@jsonId" : 4,
      "x" : 0,
      "y" : 0,
      "oldHasContent" : false,
      "newHasContent" : true,
      "name" : "changeCellHasContent"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.MoveBuggleOperation",
      "@jsonId" : 5,
      "buggleID" : "Walker",
      "oldX" : 0,
      "oldY" : 0,
      "newX" : 1,
      "newY" : 0,
      "name" : "moveBuggleOperation"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.ChangeCellContent",
      "@jsonId" : 6,
      "x" : 1,
      "y" : 0,
      "oldContent" : "",
      "newContent" : "1",
      "name" : "changeCellContent"
    }, {
      "type" : "plm.universe.bugglequest.operations.ChangeCellHasContent",
      "@jsonId" : 7,
      "x" : 1,
      "y" : 0,
      "oldHasContent" : false,
      "newHasContent" : true,
      "name" : "changeCellHasContent"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.MoveBuggleOperation",
      "@jsonId" : 8,
      "buggleID" : "Walker",
      "oldX" : 1,
      "oldY" : 0,
      "newX" : 2,
      "newY" : 0,
      "name" : "moveBuggleOperation"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.ChangeCellContent",
      "@jsonId" : 9,
      "x" : 2,
      "y" : 0,
      "oldContent" : "",
      "newContent" : "2",
      "name" : "changeCellContent"
    }, {
      "type" : "plm.universe.bugglequest.operations.ChangeCellHasContent",
      "@jsonId" : 10,
      "x" : 2,
      "y" : 0,
      "oldHasContent" : false,
      "newHasContent" : true,
      "name" : "changeCellHasContent"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.MoveBuggleOperation",
      "@jsonId" : 11,
      "buggleID" : "Walker",
      "oldX" : 2,
      "oldY" : 0,
      "newX" : 3,
      "newY" : 0,
      "name" : "moveBuggleOperation"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.ChangeCellContent",
      "@jsonId" : 12,
      "x" : 3,
      "y" : 0,
      "oldContent" : "",
      "newContent" : "3",
      "name" : "changeCellContent"
    }, {
      "type" : "plm.universe.bugglequest.operations.ChangeCellHasContent",
      "@jsonId" : 13,
      "x" : 3,
      "y" : 0,
      "oldHasContent" : false,
      "newHasContent" : true,
      "name" : "changeCellHasContent"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.MoveBuggleOperation",
      "@jsonId" : 14,
      "buggleID" : "Walker",
      "oldX" : 3,
      "oldY" : 0,
      "newX" : 4,
      "newY" : 0,
      "name" : "moveBuggleOperation"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.ChangeCellContent",
      "@jsonId" : 15,
      "x" : 4,
      "y" : 0,
      "oldContent" : "",
      "newContent" : "4",
      "name" : "changeCellContent"
    }, {
      "type" : "plm.universe.bugglequest.operations.ChangeCellHasContent",
      "@jsonId" : 16,
      "x" : 4,
      "y" : 0,
      "oldHasContent" : false,
      "newHasContent" : true,
      "name" : "changeCellHasContent"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.MoveBuggleOperation",
      "@jsonId" : 17,
      "buggleID" : "Walker",
      "oldX" : 4,
      "oldY" : 0,
      "newX" : 5,
      "newY" : 0,
      "name" : "moveBuggleOperation"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.ChangeCellContent",
      "@jsonId" : 18,
      "x" : 5,
      "y" : 0,
      "oldContent" : "",
      "newContent" : "5",
      "name" : "changeCellContent"
    }, {
      "type" : "plm.universe.bugglequest.operations.ChangeCellHasContent",
      "@jsonId" : 19,
      "x" : 5,
      "y" : 0,
      "oldHasContent" : false,
      "newHasContent" : true,
      "name" : "changeCellHasContent"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.MoveBuggleOperation",
      "@jsonId" : 20,
      "buggleID" : "Walker",
      "oldX" : 5,
      "oldY" : 0,
      "newX" : 6,
      "newY" : 0,
      "name" : "moveBuggleOperation"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.ChangeCellContent",
      "@jsonId" : 21,
      "x" : 6,
      "y" : 0,
      "oldContent" : "",
      "newContent" : "6",
      "name" : "changeCellContent"
    }, {
      "type" : "plm.universe.bugglequest.operations.ChangeCellHasContent",
      "@jsonId" : 22,
      "x" : 6,
      "y" : 0,
      "oldHasContent" : false,
      "newHasContent" : true,
      "name" : "changeCellHasContent"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.MoveBuggleOperation",
      "@jsonId" : 23,
      "buggleID" : "Walker",
      "oldX" : 6,
      "oldY" : 0,
      "newX" : 0,
      "newY" : 1,
      "name" : "moveBuggleOperation"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.ChangeCellContent",
      "@jsonId" : 24,
      "x" : 0,
      "y" : 1,
      "oldContent" : "",
      "newContent" : "7",
      "name" : "changeCellContent"
    }, {
      "type" : "plm.universe.bugglequest.operations.ChangeCellHasContent",
      "@jsonId" : 25,
      "x" : 0,
      "y" : 1,
      "oldHasContent" : false,
      "newHasContent" : true,
      "name" : "changeCellHasContent"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.MoveBuggleOperation",
      "@jsonId" : 26,
      "buggleID" : "Walker",
      "oldX" : 0,
      "oldY" : 1,
      "newX" : 1,
      "newY" : 1,
      "name" : "moveBuggleOperation"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.ChangeCellContent",
      "@jsonId" : 27,
      "x" : 1,
      "y" : 1,
      "oldContent" : "",
      "newContent" : "8",
      "name" : "changeCellContent"
    }, {
      "type" : "plm.universe.bugglequest.operations.ChangeCellHasContent",
      "@jsonId" : 28,
      "x" : 1,
      "y" : 1,
      "oldHasContent" : false,
      "newHasContent" : true,
      "name" : "changeCellHasContent"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.MoveBuggleOperation",
      "@jsonId" : 29,
      "buggleID" : "Walker",
      "oldX" : 1,
      "oldY" : 1,
      "newX" : 2,
      "newY" : 1,
      "name" : "moveBuggleOperation"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.ChangeCellContent",
      "@jsonId" : 30,
      "x" : 2,
      "y" : 1,
      "oldContent" : "",
      "newContent" : "9",
      "name" : "changeCellContent"
    }, {
      "type" : "plm.universe.bugglequest.operations.ChangeCellHasContent",
      "@jsonId" : 31,
      "x" : 2,
      "y" : 1,
      "oldHasContent" : false,
      "newHasContent" : true,
      "name" : "changeCellHasContent"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.MoveBuggleOperation",
      "@jsonId" : 32,
      "buggleID" : "Walker",
      "oldX" : 2,
      "oldY" : 1,
      "newX" : 3,
      "newY" : 1,
      "name" : "moveBuggleOperation"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.ChangeCellContent",
      "@jsonId" : 33,
      "x" : 3,
      "y" : 1,
      "oldContent" : "",
      "newContent" : "10",
      "name" : "changeCellContent"
    }, {
      "type" : "plm.universe.bugglequest.operations.ChangeCellHasContent",
      "@jsonId" : 34,
      "x" : 3,
      "y" : 1,
      "oldHasContent" : false,
      "newHasContent" : true,
      "name" : "changeCellHasContent"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.MoveBuggleOperation",
      "@jsonId" : 35,
      "buggleID" : "Walker",
      "oldX" : 3,
      "oldY" : 1,
      "newX" : 4,
      "newY" : 1,
      "name" : "moveBuggleOperation"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.ChangeCellContent",
      "@jsonId" : 36,
      "x" : 4,
      "y" : 1,
      "oldContent" : "",
      "newContent" : "11",
      "name" : "changeCellContent"
    }, {
      "type" : "plm.universe.bugglequest.operations.ChangeCellHasContent",
      "@jsonId" : 37,
      "x" : 4,
      "y" : 1,
      "oldHasContent" : false,
      "newHasContent" : true,
      "name" : "changeCellHasContent"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.MoveBuggleOperation",
      "@jsonId" : 38,
      "buggleID" : "Walker",
      "oldX" : 4,
      "oldY" : 1,
      "newX" : 5,
      "newY" : 1,
      "name" : "moveBuggleOperation"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.ChangeCellContent",
      "@jsonId" : 39,
      "x" : 5,
      "y" : 1,
      "oldContent" : "",
      "newContent" : "12",
      "name" : "changeCellContent"
    }, {
      "type" : "plm.universe.bugglequest.operations.ChangeCellHasContent",
      "@jsonId" : 40,
      "x" : 5,
      "y" : 1,
      "oldHasContent" : false,
      "newHasContent" : true,
      "name" : "changeCellHasContent"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.MoveBuggleOperation",
      "@jsonId" : 41,
      "buggleID" : "Walker",
      "oldX" : 5,
      "oldY" : 1,
      "newX" : 6,
      "newY" : 1,
      "name" : "moveBuggleOperation"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.ChangeCellContent",
      "@jsonId" : 42,
      "x" : 6,
      "y" : 1,
      "oldContent" : "",
      "newContent" : "13",
      "name" : "changeCellContent"
    }, {
      "type" : "plm.universe.bugglequest.operations.ChangeCellHasContent",
      "@jsonId" : 43,
      "x" : 6,
      "y" : 1,
      "oldHasContent" : false,
      "newHasContent" : true,
      "name" : "changeCellHasContent"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.MoveBuggleOperation",
      "@jsonId" : 44,
      "buggleID" : "Walker",
      "oldX" : 6,
      "oldY" : 1,
      "newX" : 0,
      "newY" : 2,
      "name" : "moveBuggleOperation"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.ChangeCellContent",
      "@jsonId" : 45,
      "x" : 0,
      "y" : 2,
      "oldContent" : "",
      "newContent" : "14",
      "name" : "changeCellContent"
    }, {
      "type" : "plm.universe.bugglequest.operations.ChangeCellHasContent",
      "@jsonId" : 46,
      "x" : 0,
      "y" : 2,
      "oldHasContent" : false,
      "newHasContent" : true,
      "name" : "changeCellHasContent"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.MoveBuggleOperation",
      "@jsonId" : 47,
      "buggleID" : "Walker",
      "oldX" : 0,
      "oldY" : 2,
      "newX" : 1,
      "newY" : 2,
      "name" : "moveBuggleOperation"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.ChangeCellContent",
      "@jsonId" : 48,
      "x" : 1,
      "y" : 2,
      "oldContent" : "",
      "newContent" : "15",
      "name" : "changeCellContent"
    }, {
      "type" : "plm.universe.bugglequest.operations.ChangeCellHasContent",
      "@jsonId" : 49,
      "x" : 1,
      "y" : 2,
      "oldHasContent" : false,
      "newHasContent" : true,
      "name" : "changeCellHasContent"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.MoveBuggleOperation",
      "@jsonId" : 50,
      "buggleID" : "Walker",
      "oldX" : 1,
      "oldY" : 2,
      "newX" : 2,
      "newY" : 2,
      "name" : "moveBuggleOperation"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.ChangeCellContent",
      "@jsonId" : 51,
      "x" : 2,
      "y" : 2,
      "oldContent" : "",
      "newContent" : "16",
      "name" : "changeCellContent"
    }, {
      "type" : "plm.universe.bugglequest.operations.ChangeCellHasContent",
      "@jsonId" : 52,
      "x" : 2,
      "y" : 2,
      "oldHasContent" : false,
      "newHasContent" : true,
      "name" : "changeCellHasContent"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.MoveBuggleOperation",
      "@jsonId" : 53,
      "buggleID" : "Walker",
      "oldX" : 2,
      "oldY" : 2,
      "newX" : 3,
      "newY" : 2,
      "name" : "moveBuggleOperation"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.ChangeCellContent",
      "@jsonId" : 54,
      "x" : 3,
      "y" : 2,
      "oldContent" : "",
      "newContent" : "17",
      "name" : "changeCellContent"
    }, {
      "type" : "plm.universe.bugglequest.operations.ChangeCellHasContent",
      "@jsonId" : 55,
      "x" : 3,
      "y" : 2,
      "oldHasContent" : false,
      "newHasContent" : true,
      "name" : "changeCellHasContent"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.MoveBuggleOperation",
      "@jsonId" : 56,
      "buggleID" : "Walker",
      "oldX" : 3,
      "oldY" : 2,
      "newX" : 4,
      "newY" : 2,
      "name" : "moveBuggleOperation"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.ChangeCellContent",
      "@jsonId" : 57,
      "x" : 4,
      "y" : 2,
      "oldContent" : "",
      "newContent" : "18",
      "name" : "changeCellContent"
    }, {
      "type" : "plm.universe.bugglequest.operations.ChangeCellHasContent",
      "@jsonId" : 58,
      "x" : 4,
      "y" : 2,
      "oldHasContent" : false,
      "newHasContent" : true,
      "name" : "changeCellHasContent"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.MoveBuggleOperation",
      "@jsonId" : 59,
      "buggleID" : "Walker",
      "oldX" : 4,
      "oldY" : 2,
      "newX" : 5,
      "newY" : 2,
      "name" : "moveBuggleOperation"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.ChangeCellContent",
      "@jsonId" : 60,
      "x" : 5,
      "y" : 2,
      "oldContent" : "",
      "newContent" : "19",
      "name" : "changeCellContent"
    }, {
      "type" : "plm.universe.bugglequest.operations.ChangeCellHasContent",
      "@jsonId" : 61,
      "x" : 5,
      "y" : 2,
      "oldHasContent" : false,
      "newHasContent" : true,
      "name" : "changeCellHasContent"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.MoveBuggleOperation",
      "@jsonId" : 62,
      "buggleID" : "Walker",
      "oldX" : 5,
      "oldY" : 2,
      "newX" : 6,
      "newY" : 2,
      "name" : "moveBuggleOperation"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.ChangeCellContent",
      "@jsonId" : 63,
      "x" : 6,
      "y" : 2,
      "oldContent" : "",
      "newContent" : "20",
      "name" : "changeCellContent"
    }, {
      "type" : "plm.universe.bugglequest.operations.ChangeCellHasContent",
      "@jsonId" : 64,
      "x" : 6,
      "y" : 2,
      "oldHasContent" : false,
      "newHasContent" : true,
      "name" : "changeCellHasContent"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.MoveBuggleOperation",
      "@jsonId" : 65,
      "buggleID" : "Walker",
      "oldX" : 6,
      "oldY" : 2,
      "newX" : 0,
      "newY" : 3,
      "name" : "moveBuggleOperation"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.ChangeCellContent",
      "@jsonId" : 66,
      "x" : 0,
      "y" : 3,
      "oldContent" : "",
      "newContent" : "21",
      "name" : "changeCellContent"
    }, {
      "type" : "plm.universe.bugglequest.operations.ChangeCellHasContent",
      "@jsonId" : 67,
      "x" : 0,
      "y" : 3,
      "oldHasContent" : false,
      "newHasContent" : true,
      "name" : "changeCellHasContent"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.MoveBuggleOperation",
      "@jsonId" : 68,
      "buggleID" : "Walker",
      "oldX" : 0,
      "oldY" : 3,
      "newX" : 1,
      "newY" : 3,
      "name" : "moveBuggleOperation"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.ChangeCellContent",
      "@jsonId" : 69,
      "x" : 1,
      "y" : 3,
      "oldContent" : "",
      "newContent" : "22",
      "name" : "changeCellContent"
    }, {
      "type" : "plm.universe.bugglequest.operations.ChangeCellHasContent",
      "@jsonId" : 70,
      "x" : 1,
      "y" : 3,
      "oldHasContent" : false,
      "newHasContent" : true,
      "name" : "changeCellHasContent"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.MoveBuggleOperation",
      "@jsonId" : 71,
      "buggleID" : "Walker",
      "oldX" : 1,
      "oldY" : 3,
      "newX" : 2,
      "newY" : 3,
      "name" : "moveBuggleOperation"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.ChangeCellContent",
      "@jsonId" : 72,
      "x" : 2,
      "y" : 3,
      "oldContent" : "",
      "newContent" : "23",
      "name" : "changeCellContent"
    }, {
      "type" : "plm.universe.bugglequest.operations.ChangeCellHasContent",
      "@jsonId" : 73,
      "x" : 2,
      "y" : 3,
      "oldHasContent" : false,
      "newHasContent" : true,
      "name" : "changeCellHasContent"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.MoveBuggleOperation",
      "@jsonId" : 74,
      "buggleID" : "Walker",
      "oldX" : 2,
      "oldY" : 3,
      "newX" : 3,
      "newY" : 3,
      "name" : "moveBuggleOperation"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.ChangeCellContent",
      "@jsonId" : 75,
      "x" : 3,
      "y" : 3,
      "oldContent" : "",
      "newContent" : "24",
      "name" : "changeCellContent"
    }, {
      "type" : "plm.universe.bugglequest.operations.ChangeCellHasContent",
      "@jsonId" : 76,
      "x" : 3,
      "y" : 3,
      "oldHasContent" : false,
      "newHasContent" : true,
      "name" : "changeCellHasContent"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.MoveBuggleOperation",
      "@jsonId" : 77,
      "buggleID" : "Walker",
      "oldX" : 3,
      "oldY" : 3,
      "newX" : 4,
      "newY" : 3,
      "name" : "moveBuggleOperation"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.ChangeCellContent",
      "@jsonId" : 78,
      "x" : 4,
      "y" : 3,
      "oldContent" : "",
      "newContent" : "25",
      "name" : "changeCellContent"
    }, {
      "type" : "plm.universe.bugglequest.operations.ChangeCellHasContent",
      "@jsonId" : 79,
      "x" : 4,
      "y" : 3,
      "oldHasContent" : false,
      "newHasContent" : true,
      "name" : "changeCellHasContent"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.MoveBuggleOperation",
      "@jsonId" : 80,
      "buggleID" : "Walker",
      "oldX" : 4,
      "oldY" : 3,
      "newX" : 5,
      "newY" : 3,
      "name" : "moveBuggleOperation"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.ChangeCellContent",
      "@jsonId" : 81,
      "x" : 5,
      "y" : 3,
      "oldContent" : "",
      "newContent" : "26",
      "name" : "changeCellContent"
    }, {
      "type" : "plm.universe.bugglequest.operations.ChangeCellHasContent",
      "@jsonId" : 82,
      "x" : 5,
      "y" : 3,
      "oldHasContent" : false,
      "newHasContent" : true,
      "name" : "changeCellHasContent"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.MoveBuggleOperation",
      "@jsonId" : 83,
      "buggleID" : "Walker",
      "oldX" : 5,
      "oldY" : 3,
      "newX" : 6,
      "newY" : 3,
      "name" : "moveBuggleOperation"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.ChangeCellContent",
      "@jsonId" : 84,
      "x" : 6,
      "y" : 3,
      "oldContent" : "",
      "newContent" : "27",
      "name" : "changeCellContent"
    }, {
      "type" : "plm.universe.bugglequest.operations.ChangeCellHasContent",
      "@jsonId" : 85,
      "x" : 6,
      "y" : 3,
      "oldHasContent" : false,
      "newHasContent" : true,
      "name" : "changeCellHasContent"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.MoveBuggleOperation",
      "@jsonId" : 86,
      "buggleID" : "Walker",
      "oldX" : 6,
      "oldY" : 3,
      "newX" : 0,
      "newY" : 4,
      "name" : "moveBuggleOperation"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.ChangeCellContent",
      "@jsonId" : 87,
      "x" : 0,
      "y" : 4,
      "oldContent" : "",
      "newContent" : "28",
      "name" : "changeCellContent"
    }, {
      "type" : "plm.universe.bugglequest.operations.ChangeCellHasContent",
      "@jsonId" : 88,
      "x" : 0,
      "y" : 4,
      "oldHasContent" : false,
      "newHasContent" : true,
      "name" : "changeCellHasContent"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.MoveBuggleOperation",
      "@jsonId" : 89,
      "buggleID" : "Walker",
      "oldX" : 0,
      "oldY" : 4,
      "newX" : 1,
      "newY" : 4,
      "name" : "moveBuggleOperation"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.ChangeCellContent",
      "@jsonId" : 90,
      "x" : 1,
      "y" : 4,
      "oldContent" : "",
      "newContent" : "29",
      "name" : "changeCellContent"
    }, {
      "type" : "plm.universe.bugglequest.operations.ChangeCellHasContent",
      "@jsonId" : 91,
      "x" : 1,
      "y" : 4,
      "oldHasContent" : false,
      "newHasContent" : true,
      "name" : "changeCellHasContent"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.MoveBuggleOperation",
      "@jsonId" : 92,
      "buggleID" : "Walker",
      "oldX" : 1,
      "oldY" : 4,
      "newX" : 2,
      "newY" : 4,
      "name" : "moveBuggleOperation"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.ChangeCellContent",
      "@jsonId" : 93,
      "x" : 2,
      "y" : 4,
      "oldContent" : "",
      "newContent" : "30",
      "name" : "changeCellContent"
    }, {
      "type" : "plm.universe.bugglequest.operations.ChangeCellHasContent",
      "@jsonId" : 94,
      "x" : 2,
      "y" : 4,
      "oldHasContent" : false,
      "newHasContent" : true,
      "name" : "changeCellHasContent"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.MoveBuggleOperation",
      "@jsonId" : 95,
      "buggleID" : "Walker",
      "oldX" : 2,
      "oldY" : 4,
      "newX" : 3,
      "newY" : 4,
      "name" : "moveBuggleOperation"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.ChangeCellContent",
      "@jsonId" : 96,
      "x" : 3,
      "y" : 4,
      "oldContent" : "",
      "newContent" : "31",
      "name" : "changeCellContent"
    }, {
      "type" : "plm.universe.bugglequest.operations.ChangeCellHasContent",
      "@jsonId" : 97,
      "x" : 3,
      "y" : 4,
      "oldHasContent" : false,
      "newHasContent" : true,
      "name" : "changeCellHasContent"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.MoveBuggleOperation",
      "@jsonId" : 98,
      "buggleID" : "Walker",
      "oldX" : 3,
      "oldY" : 4,
      "newX" : 4,
      "newY" : 4,
      "name" : "moveBuggleOperation"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.ChangeCellContent",
      "@jsonId" : 99,
      "x" : 4,
      "y" : 4,
      "oldContent" : "",
      "newContent" : "32",
      "name" : "changeCellContent"
    }, {
      "type" : "plm.universe.bugglequest.operations.ChangeCellHasContent",
      "@jsonId" : 100,
      "x" : 4,
      "y" : 4,
      "oldHasContent" : false,
      "newHasContent" : true,
      "name" : "changeCellHasContent"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.MoveBuggleOperation",
      "@jsonId" : 101,
      "buggleID" : "Walker",
      "oldX" : 4,
      "oldY" : 4,
      "newX" : 5,
      "newY" : 4,
      "name" : "moveBuggleOperation"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.ChangeCellContent",
      "@jsonId" : 102,
      "x" : 5,
      "y" : 4,
      "oldContent" : "",
      "newContent" : "33",
      "name" : "changeCellContent"
    }, {
      "type" : "plm.universe.bugglequest.operations.ChangeCellHasContent",
      "@jsonId" : 103,
      "x" : 5,
      "y" : 4,
      "oldHasContent" : false,
      "newHasContent" : true,
      "name" : "changeCellHasContent"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.MoveBuggleOperation",
      "@jsonId" : 104,
      "buggleID" : "Walker",
      "oldX" : 5,
      "oldY" : 4,
      "newX" : 6,
      "newY" : 4,
      "name" : "moveBuggleOperation"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.ChangeCellContent",
      "@jsonId" : 105,
      "x" : 6,
      "y" : 4,
      "oldContent" : "",
      "newContent" : "34",
      "name" : "changeCellContent"
    }, {
      "type" : "plm.universe.bugglequest.operations.ChangeCellHasContent",
      "@jsonId" : 106,
      "x" : 6,
      "y" : 4,
      "oldHasContent" : false,
      "newHasContent" : true,
      "name" : "changeCellHasContent"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.MoveBuggleOperation",
      "@jsonId" : 107,
      "buggleID" : "Walker",
      "oldX" : 6,
      "oldY" : 4,
      "newX" : 0,
      "newY" : 5,
      "name" : "moveBuggleOperation"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.ChangeCellContent",
      "@jsonId" : 108,
      "x" : 0,
      "y" : 5,
      "oldContent" : "",
      "newContent" : "35",
      "name" : "changeCellContent"
    }, {
      "type" : "plm.universe.bugglequest.operations.ChangeCellHasContent",
      "@jsonId" : 109,
      "x" : 0,
      "y" : 5,
      "oldHasContent" : false,
      "newHasContent" : true,
      "name" : "changeCellHasContent"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.MoveBuggleOperation",
      "@jsonId" : 110,
      "buggleID" : "Walker",
      "oldX" : 0,
      "oldY" : 5,
      "newX" : 1,
      "newY" : 5,
      "name" : "moveBuggleOperation"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.ChangeCellContent",
      "@jsonId" : 111,
      "x" : 1,
      "y" : 5,
      "oldContent" : "",
      "newContent" : "36",
      "name" : "changeCellContent"
    }, {
      "type" : "plm.universe.bugglequest.operations.ChangeCellHasContent",
      "@jsonId" : 112,
      "x" : 1,
      "y" : 5,
      "oldHasContent" : false,
      "newHasContent" : true,
      "name" : "changeCellHasContent"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.MoveBuggleOperation",
      "@jsonId" : 113,
      "buggleID" : "Walker",
      "oldX" : 1,
      "oldY" : 5,
      "newX" : 2,
      "newY" : 5,
      "name" : "moveBuggleOperation"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.ChangeCellContent",
      "@jsonId" : 114,
      "x" : 2,
      "y" : 5,
      "oldContent" : "",
      "newContent" : "37",
      "name" : "changeCellContent"
    }, {
      "type" : "plm.universe.bugglequest.operations.ChangeCellHasContent",
      "@jsonId" : 115,
      "x" : 2,
      "y" : 5,
      "oldHasContent" : false,
      "newHasContent" : true,
      "name" : "changeCellHasContent"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.MoveBuggleOperation",
      "@jsonId" : 116,
      "buggleID" : "Walker",
      "oldX" : 2,
      "oldY" : 5,
      "newX" : 3,
      "newY" : 5,
      "name" : "moveBuggleOperation"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.ChangeCellContent",
      "@jsonId" : 117,
      "x" : 3,
      "y" : 5,
      "oldContent" : "",
      "newContent" : "38",
      "name" : "changeCellContent"
    }, {
      "type" : "plm.universe.bugglequest.operations.ChangeCellHasContent",
      "@jsonId" : 118,
      "x" : 3,
      "y" : 5,
      "oldHasContent" : false,
      "newHasContent" : true,
      "name" : "changeCellHasContent"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.MoveBuggleOperation",
      "@jsonId" : 119,
      "buggleID" : "Walker",
      "oldX" : 3,
      "oldY" : 5,
      "newX" : 4,
      "newY" : 5,
      "name" : "moveBuggleOperation"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.ChangeCellContent",
      "@jsonId" : 120,
      "x" : 4,
      "y" : 5,
      "oldContent" : "",
      "newContent" : "39",
      "name" : "changeCellContent"
    }, {
      "type" : "plm.universe.bugglequest.operations.ChangeCellHasContent",
      "@jsonId" : 121,
      "x" : 4,
      "y" : 5,
      "oldHasContent" : false,
      "newHasContent" : true,
      "name" : "changeCellHasContent"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.MoveBuggleOperation",
      "@jsonId" : 122,
      "buggleID" : "Walker",
      "oldX" : 4,
      "oldY" : 5,
      "newX" : 5,
      "newY" : 5,
      "name" : "moveBuggleOperation"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.ChangeCellContent",
      "@jsonId" : 123,
      "x" : 5,
      "y" : 5,
      "oldContent" : "",
      "newContent" : "40",
      "name" : "changeCellContent"
    }, {
      "type" : "plm.universe.bugglequest.operations.ChangeCellHasContent",
      "@jsonId" : 124,
      "x" : 5,
      "y" : 5,
      "oldHasContent" : false,
      "newHasContent" : true,
      "name" : "changeCellHasContent"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.MoveBuggleOperation",
      "@jsonId" : 125,
      "buggleID" : "Walker",
      "oldX" : 5,
      "oldY" : 5,
      "newX" : 6,
      "newY" : 5,
      "name" : "moveBuggleOperation"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.ChangeCellContent",
      "@jsonId" : 126,
      "x" : 6,
      "y" : 5,
      "oldContent" : "",
      "newContent" : "41",
      "name" : "changeCellContent"
    }, {
      "type" : "plm.universe.bugglequest.operations.ChangeCellHasContent",
      "@jsonId" : 127,
      "x" : 6,
      "y" : 5,
      "oldHasContent" : false,
      "newHasContent" : true,
      "name" : "changeCellHasContent"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.MoveBuggleOperation",
      "@jsonId" : 128,
      "buggleID" : "Walker",
      "oldX" : 6,
      "oldY" : 5,
      "newX" : 0,
      "newY" : 6,
      "name" : "moveBuggleOperation"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.ChangeCellContent",
      "@jsonId" : 129,
      "x" : 0,
      "y" : 6,
      "oldContent" : "",
      "newContent" : "42",
      "name" : "changeCellContent"
    }, {
      "type" : "plm.universe.bugglequest.operations.ChangeCellHasContent",
      "@jsonId" : 130,
      "x" : 0,
      "y" : 6,
      "oldHasContent" : false,
      "newHasContent" : true,
      "name" : "changeCellHasContent"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.MoveBuggleOperation",
      "@jsonId" : 131,
      "buggleID" : "Walker",
      "oldX" : 0,
      "oldY" : 6,
      "newX" : 1,
      "newY" : 6,
      "name" : "moveBuggleOperation"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.ChangeCellContent",
      "@jsonId" : 132,
      "x" : 1,
      "y" : 6,
      "oldContent" : "",
      "newContent" : "43",
      "name" : "changeCellContent"
    }, {
      "type" : "plm.universe.bugglequest.operations.ChangeCellHasContent",
      "@jsonId" : 133,
      "x" : 1,
      "y" : 6,
      "oldHasContent" : false,
      "newHasContent" : true,
      "name" : "changeCellHasContent"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.MoveBuggleOperation",
      "@jsonId" : 134,
      "buggleID" : "Walker",
      "oldX" : 1,
      "oldY" : 6,
      "newX" : 2,
      "newY" : 6,
      "name" : "moveBuggleOperation"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.ChangeCellContent",
      "@jsonId" : 135,
      "x" : 2,
      "y" : 6,
      "oldContent" : "",
      "newContent" : "44",
      "name" : "changeCellContent"
    }, {
      "type" : "plm.universe.bugglequest.operations.ChangeCellHasContent",
      "@jsonId" : 136,
      "x" : 2,
      "y" : 6,
      "oldHasContent" : false,
      "newHasContent" : true,
      "name" : "changeCellHasContent"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.MoveBuggleOperation",
      "@jsonId" : 137,
      "buggleID" : "Walker",
      "oldX" : 2,
      "oldY" : 6,
      "newX" : 3,
      "newY" : 6,
      "name" : "moveBuggleOperation"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.ChangeCellContent",
      "@jsonId" : 138,
      "x" : 3,
      "y" : 6,
      "oldContent" : "",
      "newContent" : "45",
      "name" : "changeCellContent"
    }, {
      "type" : "plm.universe.bugglequest.operations.ChangeCellHasContent",
      "@jsonId" : 139,
      "x" : 3,
      "y" : 6,
      "oldHasContent" : false,
      "newHasContent" : true,
      "name" : "changeCellHasContent"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.MoveBuggleOperation",
      "@jsonId" : 140,
      "buggleID" : "Walker",
      "oldX" : 3,
      "oldY" : 6,
      "newX" : 4,
      "newY" : 6,
      "name" : "moveBuggleOperation"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.ChangeCellContent",
      "@jsonId" : 141,
      "x" : 4,
      "y" : 6,
      "oldContent" : "",
      "newContent" : "46",
      "name" : "changeCellContent"
    }, {
      "type" : "plm.universe.bugglequest.operations.ChangeCellHasContent",
      "@jsonId" : 142,
      "x" : 4,
      "y" : 6,
      "oldHasContent" : false,
      "newHasContent" : true,
      "name" : "changeCellHasContent"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.MoveBuggleOperation",
      "@jsonId" : 143,
      "buggleID" : "Walker",
      "oldX" : 4,
      "oldY" : 6,
      "newX" : 5,
      "newY" : 6,
      "name" : "moveBuggleOperation"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.ChangeCellContent",
      "@jsonId" : 144,
      "x" : 5,
      "y" : 6,
      "oldContent" : "",
      "newContent" : "47",
      "name" : "changeCellContent"
    }, {
      "type" : "plm.universe.bugglequest.operations.ChangeCellHasContent",
      "@jsonId" : 145,
      "x" : 5,
      "y" : 6,
      "oldHasContent" : false,
      "newHasContent" : true,
      "name" : "changeCellHasContent"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.MoveBuggleOperation",
      "@jsonId" : 146,
      "buggleID" : "Walker",
      "oldX" : 5,
      "oldY" : 6,
      "newX" : 6,
      "newY" : 6,
      "name" : "moveBuggleOperation"
    } ], [ {
      "type" : "plm.universe.bugglequest.operations.ChangeCellContent",
      "@jsonId" : 147,
      "x" : 6,
      "y" : 6,
      "oldContent" : "",
      "newContent" : "48",
      "name" : "changeCellContent"
    }, {
      "type" : "plm.universe.bugglequest.operations.ChangeCellHasContent",
      "@jsonId" : 148,
      "x" : 6,
      "y" : 6,
      "oldHasContent" : false,
      "newHasContent" : true,
      "name" : "changeCellHasContent"
    } ] ],
    "about" : "<!-- Please don't translate this file but l10n/missions/plm.pot (see https://github.com/oster/PLM/wiki/Working-on-translations) -->\n<h1>BuggleWorld</h1>\nThis world was invented by Lyn Turbak, at Wellesley College. It is full of\nBuggles, little animals understanding simple orders, and offers numerous\npossibilities of interaction with the world: taking or dropping objects,\npaint the ground, hit walls, etc.\n\n<h2>Methods understood by buggles</h2>\n<table border=1>\n<tr><td colspan=2 align=center><b>Moving</b><br/> (See also the note on exceptions, below)</td></tr>\n  <tr><td><b>Turn left<br/>Turn right<br/>Turn back<br/>Moving forward<br/>Moving back</b></td>\n      <td>void left()<br/>\n          void right()<br/>\n          void back()<br/>\n          void forward() or void forward(int steps)<br/>\n          void backward() or void backward(int steps)<br/></td></tr>\n  <tr><td><b>Get X coordinate<br/>Get Y coordinate<br/>Set X coordinate<br/>Set Y coordinate<br/>Set position</b></td>\n      <td>int getX()<br/>\n          int getY()<br/>\n          void setX(int x)<br/>\n          void setY(int y)<br/>\n          void setPos(int x, int y)</td></tr>\n<tr><td colspan=2>Note that the point (0,0) is on the top left corner, as it is often the case in Computer Science.</td></tr>\n\n<tr><td colspan=2 align=center><b>Information on the buggle</b></td></tr>\n  <tr><td><b>Get the color of the body<br/>Set the color of the body</b></td>\n      <td>Color getBodyColor()<br/>\n          void setBodyColor(Color c)</td></tr>\t\t\t\t\n  <tr><td><b>Look for a wall forward<br/>Look for a wall backward</b></td>\n      <td>boolean isFacingWall()<br/>\n          boolean isBackingWall()</td></tr>\t\t\t\t\n  <tr><td><b>Get heading<br/>Set heading</b><br/>valid directions are:</td>\n      <td>Direction getDirection()<br/>\n          void setDirection(Direction dir)<br/>\n          Direction.NORTH, Direction.EAST, Direction.SOUTH and Direction.WEST</td></tr>\n  <tr><td>Check whether the buggle is currently <b>selected in the interface</b></td>\n      <td>boolean isSelected()</td></tr>\n \n<tr><td colspan=2 align=center><b>About the brush</b></td></tr>\n  <tr><td><b>Brush down<br/>Brush up<br/>Get brush position</b></td>\n      <td>void brushUp()<br/>\n          void brushDown()<br/>\n          boolean isBrushDown()</td></tr>\n  <tr><td><b>Change the brush color<br/>Get the color of the brush</b></td>\n      <td>void setBrushColor(Color c)<br/>\n          Color getBrushColor()</td></tr>\n\n<tr><td colspan=2 align=center><b>Interacting with the world</b></td></tr>\n  <tr><td><b>Get the color of the ground</b></td>\n      <td>Color getGroundColor()</td></tr>\n\n  <tr><td><b>Look for a baggle on the ground<br/>Look for a baggle in bag<br/>Pickup a baggle<br/>Drop a baggle</b><br/>\n      (see the note on exceptions)</td>\n      <td>boolean isOverBaggle()<br/>\n          boolean isCarryingBaggle()<br/>\n          void pickupBaggle()<br/>\n          void dropBaggle()<br/>\n          &nbsp;</td></tr>\n\n  <tr><td><b>Look for a message<br/>Add a message<br/>Read the message<br/>Erase the message</b></td>\n      <td>boolean isOverMessage()<br/>\n          void writeMessage(String msg)<br/>\n          String readMessage()<br/>\n          void clearMessage()</td></tr>\n</table>\n\n<h2>Valid colors</h2>\n<table border=1>\n<tr><td>Name</td><td>Color</td></tr>\n<tr><td>Color.black</td>    <td BGCOLOR=\"#000000\">&nbsp;</td></tr>\n<tr><td>Color.blue</td>     <td BGCOLOR=\"#0000FF\">&nbsp;</td></tr>\n<tr><td>Color.cyan</td>     <td BGCOLOR=\"#00FFFF\">&nbsp;</td></tr>\n<tr><td>Color.darkGray</td> <td BGCOLOR=\"#404040\">&nbsp;</td></tr>\n<tr><td>Color.gray</td>     <td BGCOLOR=\"#808080\">&nbsp;</td></tr>\n<tr><td>Color.green</td>    <td BGCOLOR=\"#00FF00\">&nbsp;</td></tr>\n<tr><td>Color.lightGray</td><td BGCOLOR=\"#C0C0C0\">&nbsp;</td></tr>\n<tr><td>Color.magenta</td>  <td BGCOLOR=\"#FF00FF\">&nbsp;</td></tr>\n<tr><td>Color.orange</td>   <td BGCOLOR=\"#FFC800\">&nbsp;</td></tr>\n<tr><td>Color.pink</td>     <td BGCOLOR=\"#FFAFAF\">&nbsp;</td></tr>\n<tr><td>Color.red</td>      <td BGCOLOR=\"#FF0000\">&nbsp;</td></tr>\n<tr><td>Color.white</td>    <td BGCOLOR=\"#FFFFFF\">&nbsp;</td></tr>\n<tr><td>Color.yellow</td>   <td BGCOLOR=\"#FFFF00\">&nbsp;</td></tr>\n</table>\n\n<h2>Note on exceptions</h2>\nRegular buggles throw a BuggleWallException exception if you ask them to\ntraverse a wall.  They throw a NoBaggleUnderBuggleException exception if you\nask them to pickup a baggle from an empty cell, or a\nAlreadyHaveBaggleException exception if they already carry a baggle.  Trying\nto drop a baggle on a cell already containing one throws an\nAlreadyHaveBaggleException exception. \nDropping a baggle when you have none throws a DontHaveBaggleException.\n<p>SimpleBuggles (ie, the one used in first exercises) display an error message\non problem so that you don't need to know what an exception is.</p>\n",
    "parameters" : null,
    "cells" : [ [ {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 2,
      "x" : 0,
      "y" : 0,
      "msgColor" : [ 128, 128, 230, 255 ],
      "content" : "0",
      "leftWall" : true,
      "topWall" : true
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 2,
      "x" : 0,
      "y" : 1,
      "msgColor" : [ 128, 128, 230, 255 ],
      "content" : "7",
      "leftWall" : true
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 2,
      "x" : 0,
      "y" : 2,
      "msgColor" : [ 128, 128, 230, 255 ],
      "content" : "14",
      "leftWall" : true
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 2,
      "x" : 0,
      "y" : 3,
      "msgColor" : [ 128, 128, 230, 255 ],
      "content" : "21",
      "leftWall" : true
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 2,
      "x" : 0,
      "y" : 4,
      "msgColor" : [ 128, 128, 230, 255 ],
      "content" : "28",
      "leftWall" : true
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 2,
      "x" : 0,
      "y" : 5,
      "msgColor" : [ 128, 128, 230, 255 ],
      "content" : "35",
      "leftWall" : true
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 2,
      "x" : 0,
      "y" : 6,
      "msgColor" : [ 128, 128, 230, 255 ],
      "content" : "42",
      "leftWall" : true
    } ], [ {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 2,
      "x" : 1,
      "y" : 0,
      "msgColor" : [ 128, 128, 230, 255 ],
      "content" : "1",
      "topWall" : true
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 2,
      "x" : 1,
      "y" : 1,
      "msgColor" : [ 128, 128, 230, 255 ],
      "content" : "8"
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 2,
      "x" : 1,
      "y" : 2,
      "msgColor" : [ 128, 128, 230, 255 ],
      "content" : "15"
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 2,
      "x" : 1,
      "y" : 3,
      "msgColor" : [ 128, 128, 230, 255 ],
      "content" : "22"
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 2,
      "x" : 1,
      "y" : 4,
      "msgColor" : [ 128, 128, 230, 255 ],
      "content" : "29"
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 2,
      "x" : 1,
      "y" : 5,
      "msgColor" : [ 128, 128, 230, 255 ],
      "content" : "36"
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 2,
      "x" : 1,
      "y" : 6,
      "msgColor" : [ 128, 128, 230, 255 ],
      "content" : "43"
    } ], [ {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 2,
      "x" : 2,
      "y" : 0,
      "msgColor" : [ 128, 128, 230, 255 ],
      "content" : "2",
      "topWall" : true
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 2,
      "x" : 2,
      "y" : 1,
      "msgColor" : [ 128, 128, 230, 255 ],
      "content" : "9"
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 2,
      "x" : 2,
      "y" : 2,
      "msgColor" : [ 128, 128, 230, 255 ],
      "content" : "16"
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 2,
      "x" : 2,
      "y" : 3,
      "msgColor" : [ 128, 128, 230, 255 ],
      "content" : "23"
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 2,
      "x" : 2,
      "y" : 4,
      "msgColor" : [ 128, 128, 230, 255 ],
      "content" : "30"
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 2,
      "x" : 2,
      "y" : 5,
      "msgColor" : [ 128, 128, 230, 255 ],
      "content" : "37"
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 2,
      "x" : 2,
      "y" : 6,
      "msgColor" : [ 128, 128, 230, 255 ],
      "content" : "44"
    } ], [ {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 2,
      "x" : 3,
      "y" : 0,
      "msgColor" : [ 128, 128, 230, 255 ],
      "content" : "3",
      "topWall" : true
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 2,
      "x" : 3,
      "y" : 1,
      "msgColor" : [ 128, 128, 230, 255 ],
      "content" : "10"
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 2,
      "x" : 3,
      "y" : 2,
      "msgColor" : [ 128, 128, 230, 255 ],
      "content" : "17"
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 2,
      "x" : 3,
      "y" : 3,
      "msgColor" : [ 128, 128, 230, 255 ],
      "content" : "24"
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 2,
      "x" : 3,
      "y" : 4,
      "msgColor" : [ 128, 128, 230, 255 ],
      "content" : "31"
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 2,
      "x" : 3,
      "y" : 5,
      "msgColor" : [ 128, 128, 230, 255 ],
      "content" : "38"
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 2,
      "x" : 3,
      "y" : 6,
      "msgColor" : [ 128, 128, 230, 255 ],
      "content" : "45"
    } ], [ {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 2,
      "x" : 4,
      "y" : 0,
      "msgColor" : [ 128, 128, 230, 255 ],
      "content" : "4",
      "topWall" : true
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 2,
      "x" : 4,
      "y" : 1,
      "msgColor" : [ 128, 128, 230, 255 ],
      "content" : "11"
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 2,
      "x" : 4,
      "y" : 2,
      "msgColor" : [ 128, 128, 230, 255 ],
      "content" : "18"
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 2,
      "x" : 4,
      "y" : 3,
      "msgColor" : [ 128, 128, 230, 255 ],
      "content" : "25"
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 2,
      "x" : 4,
      "y" : 4,
      "msgColor" : [ 128, 128, 230, 255 ],
      "content" : "32"
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 2,
      "x" : 4,
      "y" : 5,
      "msgColor" : [ 128, 128, 230, 255 ],
      "content" : "39"
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 2,
      "x" : 4,
      "y" : 6,
      "msgColor" : [ 128, 128, 230, 255 ],
      "content" : "46"
    } ], [ {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 2,
      "x" : 5,
      "y" : 0,
      "msgColor" : [ 128, 128, 230, 255 ],
      "content" : "5",
      "topWall" : true
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 2,
      "x" : 5,
      "y" : 1,
      "msgColor" : [ 128, 128, 230, 255 ],
      "content" : "12"
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 2,
      "x" : 5,
      "y" : 2,
      "msgColor" : [ 128, 128, 230, 255 ],
      "content" : "19"
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 2,
      "x" : 5,
      "y" : 3,
      "msgColor" : [ 128, 128, 230, 255 ],
      "content" : "26"
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 2,
      "x" : 5,
      "y" : 4,
      "msgColor" : [ 128, 128, 230, 255 ],
      "content" : "33"
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 2,
      "x" : 5,
      "y" : 5,
      "msgColor" : [ 128, 128, 230, 255 ],
      "content" : "40"
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 2,
      "x" : 5,
      "y" : 6,
      "msgColor" : [ 128, 128, 230, 255 ],
      "content" : "47"
    } ], [ {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 2,
      "x" : 6,
      "y" : 0,
      "msgColor" : [ 128, 128, 230, 255 ],
      "content" : "6",
      "topWall" : true
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 2,
      "x" : 6,
      "y" : 1,
      "msgColor" : [ 128, 128, 230, 255 ],
      "content" : "13"
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 2,
      "x" : 6,
      "y" : 2,
      "msgColor" : [ 128, 128, 230, 255 ],
      "content" : "20"
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 2,
      "x" : 6,
      "y" : 3,
      "msgColor" : [ 128, 128, 230, 255 ],
      "content" : "27"
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 2,
      "x" : 6,
      "y" : 4,
      "msgColor" : [ 128, 128, 230, 255 ],
      "content" : "34"
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 2,
      "x" : 6,
      "y" : 5,
      "msgColor" : [ 128, 128, 230, 255 ],
      "content" : "41"
    }, {
      "type" : "plm.universe.bugglequest.BuggleWorldCell",
      "world" : 2,
      "x" : 6,
      "y" : 6,
      "msgColor" : [ 128, 128, 230, 255 ],
      "content" : "48"
    } ] ],
    "visibleGrid" : true,
    "easter" : false
  } ]
}