{
  "id" : "turtleart.polygon6.Polygon6",
  "name" : "Polygon6",
  "tabName" : "Polygon6",
  "defaultSourceFiles" : {
    "Java" : {
      "name" : "Polygon6",
      "body" : "public void run() {\n}\n",
      "template" : "$package   import plm.universe.turtles.Turtle;  public class Polygon6 extends Turtle { $body } ",
      "offset" : 1,
      "correction" : "$package \n\nimport plm.universe.turtles.Turtle;\n\npublic class Polygon6 extends Turtle {\n\n\t/* BEGIN TEMPLATE */\n\tpublic void run() {\n\t\t/* BEGIN SOLUTION */\n\t    addSizeHint(65,110, 65,190);\n\n\t    for (int i=0; i<6;i++) {\n\t        forward(80);\n\t        right(360/6);\n\t    }\n\t    /* END SOLUTION */\n\t}\n\t/* END TEMPLATE */\n}\n",
      "error" : "Error"
    },
    "Scala" : {
      "name" : "Polygon6",
      "body" : "override def run() {\n}\n",
      "template" : "$package \n\nimport plm.universe.turtles.Turtle;\n\nclass Polygon6 extends Turtle {\n$body\n}\n",
      "offset" : 5,
      "correction" : "$package \n\nimport plm.universe.turtles.Turtle;\n\nclass Polygon6 extends Turtle {\n\n\t/* BEGIN TEMPLATE */\n\toverride def run() {\n\t\t/* BEGIN SOLUTION */\n\t    addSizeHint(65,110, 65,190);\n\n\t    for (i <- 1 to 6) {\n\t        forward(80);\n\t        right(360/6);\n\t    }\n\t    /* END SOLUTION */\n\t}\n\t/* END TEMPLATE */\n}\n",
      "error" : "Error"
    },
    "Python" : {
      "name" : "Polygon6",
      "body" : "",
      "template" : "$body\n",
      "offset" : 1,
      "correction" : "# BEGIN SOLUTION\naddSizeHint(65,110, 65,190);\n\nfor i in range (6):\n\tforward(80);\n\tright(360/6);\n# END SOLUTION\n",
      "error" : "Error"
    }
  },

  "initialWorlds" : [ {
    "type" : "plm.universe.turtles.TurtleWorld",
    "@jsonId" : 1,
    "name" : "Polygon6",
    "width" : 300.0,
    "height" : 300.0,
    "entities" : [ {
      "type" : "plm.universe.turtles.Turtle",
      "name" : "Hawksbill",
      "x" : 81.0,
      "y" : 190.0,
      "world" : 1,
      "inited" : false,
      "color" : [ 0, 0, 0, 255 ],
      "direction" : 270.0
    } ],
    "steps" : [ ],
    "about" : "<!-- Please don't translate this file but l10n/missions/plm.pot (see https://github.com/oster/PLM/wiki/Working-on-translations) -->\n<h1>The universe of turtles</h1>\n\n<p>This is an adaptation of LOGO for the Programmer's Learning Machine.</p>\n\n<p>It is directly inspired from the work of the mathematician Seymour\nPapert in the 60's. Inspired from the swiss psycholog Jean Piaget, he came\nup with a learning method called LOGO to teach programming to young\nchilds. The world is full of turtles which leave a painting where they go\nand which respond to simple orders.</p>\n\n<h2>Functions to move the turtle</h2>\n\n<pre><code class=\"code-container\">void forward(double steps)\nvoid backward(double steps)</code></pre>\nMoves forward or backward of the requested amount of steps.\n\n<pre><code class=\"code-container\">void right(double angle)\nvoid left(double angle)</code></pre>\nTurns left or right of the given angle (in degrees).\n\n<pre><code class=\"code-container\">double getX()\ndouble getY()</code></pre>\nReturns the current position of the turtle. \nNote that the point (0,0) is on the top left corner, as it is often the case in Computer Science.  \n\n<pre><code class=\"code-container\">void setX(double x)\nvoid setY(double y)\nvoid setPos(double x, double y)</code></pre>\nTeleports the turtle to a new position (without leaving any trace).\n\n<pre><code class=\"code-container\">void moveTo(double x, double y)</code></pre>\nMoves the turtle to a new position.\n\n<pre><code class=\"code-container\">void circle(double radius)</code></pre>\nDraw a circle of the specified radius centered on the turtle.\n\n<pre><code class=\"code-container\">void hide()</code></pre>\nHides the turtle.\n\n<pre><code class=\"code-container\">void show()</code></pre>\nShows the turtle back.\n\n<pre><code class=\"code-container\">boolean isVisible()</code></pre>\nReturns whether the turtle is currently visible.\n\n<pre><code class=\"code-container\">void clear()</code></pre>\nRemoves any trail on the sheet.\n\n<pre><code class=\"code-container\">double getHeading()</code></pre>\nReturns the current heading of the turtle (in degrees).\n\n<pre><code class=\"code-container\">void setHeading(double angle)</code></pre>\nSets a new heading to the turtle (in degrees).\n\n<h2>Functions about the pen</h2>\n\n<pre><code class=\"code-container\">void penUp()</code></pre>\nMoves the pen up (turtles have pens, not brushes as buggles). The\nturtle will not leave any trace during its subsequent moves.\n\n<pre><code class=\"code-container\">void penDown()</code></pre>\nMoves the pen down. The turtle will leave a trace during its subsequent moves.\n\n<pre><code class=\"code-container\">boolean isPenDown()</code></pre>\nReturns the current pen position as a boolean.\n\n<pre><code class=\"code-container\">Color getColor()</code></pre>\nReturns the current pen color.\n\n<pre><code class=\"code-container\">void setColor(Color color)</code></pre>\nChanges the pen color.\n\n<h2>Other functions</h2>\n\n<pre><code class=\"code-container\">boolean isSelected()</code></pre>\nReturns whether the current turtle is selected in the graphical interface.\n\n<h2>Valid colors</h2>\n<table border=1>\n<tr><td>Name</td><td>Color</td></tr>\n<tr><td>Color.black</td>    <td BGCOLOR=\"#000000\">&nbsp;</td></tr>\n<tr><td>Color.blue</td>     <td BGCOLOR=\"#0000FF\">&nbsp;</td></tr>\n<tr><td>Color.cyan</td>     <td BGCOLOR=\"#00FFFF\">&nbsp;</td></tr>\n<tr><td>Color.darkGray</td> <td BGCOLOR=\"#404040\">&nbsp;</td></tr>\n<tr><td>Color.gray</td>     <td BGCOLOR=\"#808080\">&nbsp;</td></tr>\n<tr><td>Color.green</td>    <td BGCOLOR=\"#00FF00\">&nbsp;</td></tr>\n<tr><td>Color.lightGray</td><td BGCOLOR=\"#C0C0C0\">&nbsp;</td></tr>\n<tr><td>Color.magenta</td>  <td BGCOLOR=\"#FF00FF\">&nbsp;</td></tr>\n<tr><td>Color.orange</td>   <td BGCOLOR=\"#FFC800\">&nbsp;</td></tr>\n<tr><td>Color.pink</td>     <td BGCOLOR=\"#FFAFAF\">&nbsp;</td></tr>\n<tr><td>Color.red</td>      <td BGCOLOR=\"#FF0000\">&nbsp;</td></tr>\n<tr><td>Color.white</td>    <td BGCOLOR=\"#FFFFFF\">&nbsp;</td></tr>\n<tr><td>Color.yellow</td>   <td BGCOLOR=\"#FFFF00\">&nbsp;</td></tr>\n</table>\n\n",
    "parameters" : null,
    "shapes" : [ ],
    "sizeHints" : [ ]
  } ],
  "answerWorlds" : [ {
    "type" : "plm.universe.turtles.TurtleWorld",
    "@jsonId" : 2,
    "name" : "Polygon6",
    "width" : 300.0,
    "height" : 300.0,
    "entities" : [ {
      "type" : "plm.universe.turtles.Turtle",
      "name" : "Hawksbill",
      "world" : 2,
      "inited" : true,
      "color" : [ 0, 0, 0, 255 ],
      "x" : 81.00000000000016,
      "y" : 190.00000000000014,
      "direction" : 269.9999999999999
    } ],
    "steps" : [ [ {
      "type" : "plm.universe.turtles.operations.AddSizeHint",
      "@jsonId" : 3,
      "turtleID" : "Hawksbill",
      "x1" : 65,
      "y1" : 110,
      "x2" : 65,
      "y2" : 190,
      "text" : "80",
      "name" : "addSizeHint"
    }, {
      "type" : "plm.universe.turtles.operations.AddLine",
      "@jsonId" : 4,
      "turtleID" : "Hawksbill",
      "x1" : 81.0,
      "y1" : 190.0,
      "x2" : 80.99999999999999,
      "y2" : 110.0,
      "color" : [ 0, 0, 0, 255 ],
      "name" : "addLine"
    }, {
      "type" : "plm.universe.turtles.operations.MoveTurtle",
      "@jsonId" : 5,
      "turtleID" : "Hawksbill",
      "oldX" : 81.0,
      "oldY" : 190.0,
      "newX" : 80.99999999999999,
      "newY" : 110.0,
      "name" : "moveTurtle"
    } ], [ {
      "type" : "plm.universe.turtles.operations.RotateTurtle",
      "@jsonId" : 6,
      "turtleID" : "Hawksbill",
      "oldHeading" : 270.0,
      "newHeading" : 329.99999999999994,
      "name" : "rotateTurtle"
    } ], [ {
      "type" : "plm.universe.turtles.operations.AddLine",
      "@jsonId" : 7,
      "turtleID" : "Hawksbill",
      "x1" : 80.99999999999999,
      "y1" : 110.0,
      "x2" : 150.2820323027551,
      "y2" : 70.00000000000003,
      "color" : [ 0, 0, 0, 255 ],
      "name" : "addLine"
    }, {
      "type" : "plm.universe.turtles.operations.MoveTurtle",
      "@jsonId" : 8,
      "turtleID" : "Hawksbill",
      "oldX" : 80.99999999999999,
      "oldY" : 110.0,
      "newX" : 150.2820323027551,
      "newY" : 70.00000000000003,
      "name" : "moveTurtle"
    } ], [ {
      "type" : "plm.universe.turtles.operations.RotateTurtle",
      "@jsonId" : 9,
      "turtleID" : "Hawksbill",
      "oldHeading" : 330.00000000000006,
      "newHeading" : 390.00000000000006,
      "name" : "rotateTurtle"
    } ], [ {
      "type" : "plm.universe.turtles.operations.AddLine",
      "@jsonId" : 10,
      "turtleID" : "Hawksbill",
      "x1" : 150.2820323027551,
      "y1" : 70.00000000000003,
      "x2" : 219.56406460551023,
      "y2" : 109.99999999999999,
      "color" : [ 0, 0, 0, 255 ],
      "name" : "addLine"
    }, {
      "type" : "plm.universe.turtles.operations.MoveTurtle",
      "@jsonId" : 11,
      "turtleID" : "Hawksbill",
      "oldX" : 150.2820323027551,
      "oldY" : 70.00000000000003,
      "newX" : 219.56406460551023,
      "newY" : 109.99999999999999,
      "name" : "moveTurtle"
    } ], [ {
      "type" : "plm.universe.turtles.operations.RotateTurtle",
      "@jsonId" : 12,
      "turtleID" : "Hawksbill",
      "oldHeading" : 29.999999999999964,
      "newHeading" : 89.99999999999997,
      "name" : "rotateTurtle"
    } ], [ {
      "type" : "plm.universe.turtles.operations.AddLine",
      "@jsonId" : 13,
      "turtleID" : "Hawksbill",
      "x1" : 219.56406460551023,
      "y1" : 109.99999999999999,
      "x2" : 219.5640646055103,
      "y2" : 190.0,
      "color" : [ 0, 0, 0, 255 ],
      "name" : "addLine"
    }, {
      "type" : "plm.universe.turtles.operations.MoveTurtle",
      "@jsonId" : 14,
      "turtleID" : "Hawksbill",
      "oldX" : 219.56406460551023,
      "oldY" : 109.99999999999999,
      "newX" : 219.5640646055103,
      "newY" : 190.0,
      "name" : "moveTurtle"
    } ], [ {
      "type" : "plm.universe.turtles.operations.RotateTurtle",
      "@jsonId" : 15,
      "turtleID" : "Hawksbill",
      "oldHeading" : 89.99999999999994,
      "newHeading" : 149.99999999999991,
      "name" : "rotateTurtle"
    } ], [ {
      "type" : "plm.universe.turtles.operations.AddLine",
      "@jsonId" : 16,
      "turtleID" : "Hawksbill",
      "x1" : 219.5640646055103,
      "y1" : 190.0,
      "x2" : 150.28203230275528,
      "y2" : 230.00000000000009,
      "color" : [ 0, 0, 0, 255 ],
      "name" : "addLine"
    }, {
      "type" : "plm.universe.turtles.operations.MoveTurtle",
      "@jsonId" : 17,
      "turtleID" : "Hawksbill",
      "oldX" : 219.5640646055103,
      "oldY" : 190.0,
      "newX" : 150.28203230275528,
      "newY" : 230.00000000000009,
      "name" : "moveTurtle"
    } ], [ {
      "type" : "plm.universe.turtles.operations.RotateTurtle",
      "@jsonId" : 18,
      "turtleID" : "Hawksbill",
      "oldHeading" : 149.99999999999991,
      "newHeading" : 209.99999999999991,
      "name" : "rotateTurtle"
    } ], [ {
      "type" : "plm.universe.turtles.operations.AddLine",
      "@jsonId" : 19,
      "turtleID" : "Hawksbill",
      "x1" : 150.28203230275528,
      "y1" : 230.00000000000009,
      "x2" : 81.00000000000016,
      "y2" : 190.00000000000014,
      "color" : [ 0, 0, 0, 255 ],
      "name" : "addLine"
    }, {
      "type" : "plm.universe.turtles.operations.MoveTurtle",
      "@jsonId" : 20,
      "turtleID" : "Hawksbill",
      "oldX" : 150.28203230275528,
      "oldY" : 230.00000000000009,
      "newX" : 81.00000000000016,
      "newY" : 190.00000000000014,
      "name" : "moveTurtle"
    } ], [ {
      "type" : "plm.universe.turtles.operations.RotateTurtle",
      "@jsonId" : 21,
      "turtleID" : "Hawksbill",
      "oldHeading" : 209.99999999999997,
      "newHeading" : 269.99999999999994,
      "name" : "rotateTurtle"
    } ] ],
    "about" : "<!-- Please don't translate this file but l10n/missions/plm.pot (see https://github.com/oster/PLM/wiki/Working-on-translations) -->\n<h1>The universe of turtles</h1>\n\n<p>This is an adaptation of LOGO for the Programmer's Learning Machine.</p>\n\n<p>It is directly inspired from the work of the mathematician Seymour\nPapert in the 60's. Inspired from the swiss psycholog Jean Piaget, he came\nup with a learning method called LOGO to teach programming to young\nchilds. The world is full of turtles which leave a painting where they go\nand which respond to simple orders.</p>\n\n<h2>Functions to move the turtle</h2>\n\n<pre><code class=\"code-container\">void forward(double steps)\nvoid backward(double steps)</code></pre>\nMoves forward or backward of the requested amount of steps.\n\n<pre><code class=\"code-container\">void right(double angle)\nvoid left(double angle)</code></pre>\nTurns left or right of the given angle (in degrees).\n\n<pre><code class=\"code-container\">double getX()\ndouble getY()</code></pre>\nReturns the current position of the turtle. \nNote that the point (0,0) is on the top left corner, as it is often the case in Computer Science.  \n\n<pre><code class=\"code-container\">void setX(double x)\nvoid setY(double y)\nvoid setPos(double x, double y)</code></pre>\nTeleports the turtle to a new position (without leaving any trace).\n\n<pre><code class=\"code-container\">void moveTo(double x, double y)</code></pre>\nMoves the turtle to a new position.\n\n<pre><code class=\"code-container\">void circle(double radius)</code></pre>\nDraw a circle of the specified radius centered on the turtle.\n\n<pre><code class=\"code-container\">void hide()</code></pre>\nHides the turtle.\n\n<pre><code class=\"code-container\">void show()</code></pre>\nShows the turtle back.\n\n<pre><code class=\"code-container\">boolean isVisible()</code></pre>\nReturns whether the turtle is currently visible.\n\n<pre><code class=\"code-container\">void clear()</code></pre>\nRemoves any trail on the sheet.\n\n<pre><code class=\"code-container\">double getHeading()</code></pre>\nReturns the current heading of the turtle (in degrees).\n\n<pre><code class=\"code-container\">void setHeading(double angle)</code></pre>\nSets a new heading to the turtle (in degrees).\n\n<h2>Functions about the pen</h2>\n\n<pre><code class=\"code-container\">void penUp()</code></pre>\nMoves the pen up (turtles have pens, not brushes as buggles). The\nturtle will not leave any trace during its subsequent moves.\n\n<pre><code class=\"code-container\">void penDown()</code></pre>\nMoves the pen down. The turtle will leave a trace during its subsequent moves.\n\n<pre><code class=\"code-container\">boolean isPenDown()</code></pre>\nReturns the current pen position as a boolean.\n\n<pre><code class=\"code-container\">Color getColor()</code></pre>\nReturns the current pen color.\n\n<pre><code class=\"code-container\">void setColor(Color color)</code></pre>\nChanges the pen color.\n\n<h2>Other functions</h2>\n\n<pre><code class=\"code-container\">boolean isSelected()</code></pre>\nReturns whether the current turtle is selected in the graphical interface.\n\n<h2>Valid colors</h2>\n<table border=1>\n<tr><td>Name</td><td>Color</td></tr>\n<tr><td>Color.black</td>    <td BGCOLOR=\"#000000\">&nbsp;</td></tr>\n<tr><td>Color.blue</td>     <td BGCOLOR=\"#0000FF\">&nbsp;</td></tr>\n<tr><td>Color.cyan</td>     <td BGCOLOR=\"#00FFFF\">&nbsp;</td></tr>\n<tr><td>Color.darkGray</td> <td BGCOLOR=\"#404040\">&nbsp;</td></tr>\n<tr><td>Color.gray</td>     <td BGCOLOR=\"#808080\">&nbsp;</td></tr>\n<tr><td>Color.green</td>    <td BGCOLOR=\"#00FF00\">&nbsp;</td></tr>\n<tr><td>Color.lightGray</td><td BGCOLOR=\"#C0C0C0\">&nbsp;</td></tr>\n<tr><td>Color.magenta</td>  <td BGCOLOR=\"#FF00FF\">&nbsp;</td></tr>\n<tr><td>Color.orange</td>   <td BGCOLOR=\"#FFC800\">&nbsp;</td></tr>\n<tr><td>Color.pink</td>     <td BGCOLOR=\"#FFAFAF\">&nbsp;</td></tr>\n<tr><td>Color.red</td>      <td BGCOLOR=\"#FF0000\">&nbsp;</td></tr>\n<tr><td>Color.white</td>    <td BGCOLOR=\"#FFFFFF\">&nbsp;</td></tr>\n<tr><td>Color.yellow</td>   <td BGCOLOR=\"#FFFF00\">&nbsp;</td></tr>\n</table>\n\n",
    "parameters" : null,
    "shapes" : [ {
      "type" : "plm.universe.turtles.Line",
      "x1" : 80.99999999999999,
      "y1" : 110.0,
      "x2" : 81.0,
      "y2" : 190.0,
      "color" : [ 0, 0, 0, 255 ],
      "length" : 80.0
    }, {
      "type" : "plm.universe.turtles.Line",
      "x1" : 80.99999999999999,
      "y1" : 110.0,
      "x2" : 150.2820323027551,
      "y2" : 70.00000000000003,
      "color" : [ 0, 0, 0, 255 ],
      "length" : 80.00000000000001
    }, {
      "type" : "plm.universe.turtles.Line",
      "x1" : 150.2820323027551,
      "y1" : 70.00000000000003,
      "x2" : 219.56406460551023,
      "y2" : 109.99999999999999,
      "color" : [ 0, 0, 0, 255 ],
      "length" : 80.0
    }, {
      "type" : "plm.universe.turtles.Line",
      "x1" : 219.56406460551023,
      "y1" : 109.99999999999999,
      "x2" : 219.5640646055103,
      "y2" : 190.0,
      "color" : [ 0, 0, 0, 255 ],
      "length" : 80.00000000000001
    }, {
      "type" : "plm.universe.turtles.Line",
      "x1" : 150.28203230275528,
      "y1" : 230.00000000000009,
      "x2" : 219.5640646055103,
      "y2" : 190.0,
      "color" : [ 0, 0, 0, 255 ],
      "length" : 79.99999999999999
    }, {
      "type" : "plm.universe.turtles.Line",
      "x1" : 81.00000000000016,
      "y1" : 190.00000000000014,
      "x2" : 150.28203230275528,
      "y2" : 230.00000000000009,
      "color" : [ 0, 0, 0, 255 ],
      "length" : 80.0
    } ],
    "sizeHints" : [ {
      "type" : "plm.universe.turtles.SizeHint",
      "x1" : 65.0,
      "y1" : 110.0,
      "x2" : 65.0,
      "y2" : 190.0,
      "text" : "80"
    } ]
  } ],
  "instructions" : {
    "pt" : "",
    "en" : "",
    "fr" : ""
  }
}