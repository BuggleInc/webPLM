# This is the main configuration file for the application.
# ~~~~~

application.version = 1.3.0

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
#
# This must be changed for production, but we recommend not changing it in this file.
#
# See http://www.playframework.com/documentation/latest/ApplicationSecret for more details.
application.secret="?H23ZTJ2bcLW/gZVWHM^;/f3]JhVxYXGh?O6H6IxAywLIOnd?V>KAq76_sMOMXjJ"

# The application languages
# ~~~~~
play.i18n.langs=["en", "fr"]

# The application DI modules
# ~~~~~
play.modules.enabled += "modules.SilhouetteModule"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# application.global=Global

# YEOMAN configuration
# ~~~~~
yeoman.distDir="/ui/dist"
yeoman.devDirs=["ui/.tmp", "ui/app"]

# Registers the filters
# ~~~~~
#play.http.filters = "utils.Filters"

# Security Filter Configuration - Content Security Policy
# ~~~~~
#play.filters.headers.contentSecurityPolicy
# default-src
# 'self'
# img-src
# 'self'
# fbcdn-profile-a.akamaihd.net (Facebook)
# *.twimg.com (Twitter)
# *.googleusercontent.com (Google)
# *.xingassets.com (Xing)
# vk.com (VK)
# *.yimg.com (Yahoo)
# secure.gravatar.com
# style-src
# 'self'
# 'unsafe-inline'
# maxcdn.bootstrapcdn.com
# cdn.jsdelivr.net
# fonts.googleapis.com
# 'unsafe-inline' (in-line css found in bootstrap.min.js)
# font-src
# 'self'
# fonts.gstatic.com
# fonts.googleapis.com
# maxcdn.bootstrapcdn.com
# connect-src
# 'self'
# twitter.com
# *.xing.com
#play.filters.headers.contentSecurityPolicy="default-src 'self'; img-src 'self' fbcdn-profile-a.akamaihd.net *.twimg.com *.googleusercontent.com *.xingassets.com vk.com *.yimg.com secure.gravatar.com; style-src 'self' 'unsafe-inline' maxcdn.bootstrapcdn.com cdn.jsdelivr.net fonts.googleapis.com; font-src 'self' fonts.gstatic.com fonts.googleapis.com maxcdn.bootstrapcdn.com; connect-src 'self' twitter.com *.xing.com"

# CSRF Token Filter Configuration
# ~~~~~
play.filters.csrf.cookie.name="PLAY_CSRF_TOKEN" // We store the CSRF token in a cookie instead of the session so that Angular can read it
play.filters.csrf.contentType.blackList=[ // We would also check AJAX requests from type application/json
  "application/x-www-form-urlencoded",
  "multipart/form-data",
  "text/plain",
  "application/json"
]

include "silhouette.conf"


# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# application.router=my.application.Routes

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# YEOMAN configuration
yeoman.distDir="/ui/dist"

yeoman.devDirs=["ui/.tmp", "ui/app"]

# Info for message queue.

messagequeue.addr=${?MESSAGEQ_PORT_5672_TCP_ADDR}
messagequeue.port=${?MESSAGEQ_PORT_5672_TCP_PORT}

include "silhouette.conf"

plm.execution.mode="LOCAL"
plm.execution.mode=${?PLM_EXECUTION_MODE}

# GitHub info
# Required for the bug report functionality
plm.github.oauth="dummy-token"
plm.github.oauth=${?GITHUB_ACCESS_TOKEN}
plm.github.repo="webPLM"
plm.github.owner="BuggleInc"
