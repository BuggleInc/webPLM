{
  "id" : "TricolorHanoi1",
  "name" : "TricolorHanoi1",
  "tabName" : "TricolorHanoi1",
  "defaultSourceFiles" : {
    "Java" : {
      "name" : "TricolorHanoi1",
      "body" : "void move3(int height, int src, int mid, int dst) {\n}\n",
      "template" : "$package   import plm.universe.hanoi.HanoiEntity;  public class TricolorHanoi1 extends HanoiEntity {\t \tpublic void run() { \t\tint src = (Integer)getParam(0); \t\tint mid = (Integer)getParam(1); \t\tint dst = (Integer)getParam(2); \t\tmove3(getSlotSize(src)/3, src, mid, dst); \t}  $body  } ",
      "offset" : 1,
      "correction" : "$package \n\nimport plm.universe.hanoi.HanoiEntity;\n\npublic class TricolorHanoi1 extends HanoiEntity {\n\t\n\tpublic void run() {\n\t\tint src = (Integer)getParam(0);\n\t\tint mid = (Integer)getParam(1);\n\t\tint dst = (Integer)getParam(2);\n\t\tmove3(getSlotSize(src)/3, src, mid, dst);\n\t}\n\n\t/* BEGIN TEMPLATE */\n\tvoid move3(int height, int src, int mid, int dst) {\n\t\t/* BEGIN SOLUTION */\n\t\tif (height>0) {\n\n\t\t\tmove3(height-1, src, dst, mid);\n\t\t\tmove(src,dst);\n\t\t\tmove(src,dst);\n\t\t\tmove(src,dst);\n\t\t\tmove3(height-1, mid, src, dst);\n\t\t}\n\t\t/* END SOLUTION */\n\t}\n\n\t/* END TEMPLATE */\n\n}\n",
      "error" : "Error"
    },
    "Scala" : {
      "name" : "TricolorHanoi1",
      "body" : "def move3(height:Int, src:Int, mid:Int, dst:Int) {\n  }\n",
      "template" : "$package \n\n\nimport plm.universe.hanoi.HanoiEntity\n\nclass TricolorHanoi1 extends HanoiEntity {\n\toverride def run() {\n    val src = getParam(0).asInstanceOf[Int]\n    val mid = getParam(1).asInstanceOf[Int]\n    val dst = getParam(2).asInstanceOf[Int]\n\t\tmove3(getSlotSize(src)/3, src,mid, dst)\n\t}\n\n$body\n}\n",
      "offset" : 12,
      "correction" : "$package \n\n\nimport plm.universe.hanoi.HanoiEntity\n\nclass TricolorHanoi1 extends HanoiEntity {\n\n\toverride def run() {\n    val src = getParam(0).asInstanceOf[Int]\n    val mid = getParam(1).asInstanceOf[Int]\n    val dst = getParam(2).asInstanceOf[Int]\n\t\tmove3(getSlotSize(src)/3, src,mid, dst)\n\t}\n\n\t/* BEGIN TEMPLATE */\n  def move3(height:Int, src:Int, mid:Int, dst:Int) {\n\t  /* BEGIN SOLUTION */\n    if (height>0) {\n//      System.err.println(\"move3(\"+height+\",\"+src+\",\"+dst+\")\");\n      move3(height-1, src, dst, mid);\n      move(src,dst);\n      move(src,dst);\n      move(src,dst);\n      move3(height-1, mid, src, dst);\n    }\n\t\t/* END SOLUTION */\n\t}\n\t/* END TEMPLATE */\n}\n",
      "error" : "Error"
    },
    "Python" : {
      "name" : "TricolorHanoi1",
      "body" : "def move3(height, src, mid, dst):\n\t# Your code here\n",
      "template" : "$body\nmove3(getSlotSize(getParam(0))/3, getParam(0),getParam(1),getParam(2))\n",
      "offset" : 1,
      "correction" : "# BEGIN TEMPLATE\ndef move3(height, src, mid, dst):\n\t# Your code here\n\t# BEGIN SOLUTION\n\tif (height>0):\n\t\tmove3(height-1, src, dst, mid);\n\t\tmove(src,dst);\n\t\tmove(src,dst);\n\t\tmove(src,dst);\n\t\tmove3(height-1, mid, src, dst);\n\t# END SOLUTION\n# END TEMPLATE\nmove3(getSlotSize(getParam(0))/3, getParam(0),getParam(1),getParam(2))\n",
      "error" : "Error"
    }
  },
  "initialWorlds" : [ {
    "type" : "plm.universe.hanoi.HanoiWorld",
    "@jsonId" : 1,
    "name" : "moveStack(0,1,2)",
    "entities" : [ {
      "type" : "plm.universe.hanoi.HanoiEntity",
      "name" : "worker",
      "world" : 1,
      "inited" : false
    } ],
    "steps" : [ ],
    "about" : "<!-- Please don't translate this file but l10n/missions/plm.pot (see https://github.com/oster/PLM/wiki/Working-on-translations) -->\n<h1>HanoiWorld</h1>\n\n<p>\nThis world implements the ultra-classical Hanoi problem. You are asked\nto move the disk pile from the stick where they are to the target\nstick (given as second parameter in the world's name -- number 1 for\nthe default world). There is some extra constraint: you can only move\none disk at a time, and you cannot move a big disk over a smaller\none.</p>\n\n<p>Only 4 functions are provided:</p>\n\n<pre>void move(int src, int dst)</pre>\n\nMoves one disk from the stick <code>src</code> onto the stick\n<code>dst</code>. If you try to do an invalid move (like laying a disk\nover a smaller one), an IllegalArgumentException is thrown. \n\n<pre>int getSlotSize(int slot)</pre>\nReturns the amount of disks placed on the specified slot. This is mainly \nused to initialize the recursion and set the amount of recursive call to execute.\n\n<pre>int getSlotRadius(int slot)</pre>\nReturns the radius of the top-most disk of the specified slot.\n\n<pre>boolean isSelected()</pre>\nReturns whether the current world is selected in the graphical interface.\n",
    "parameters" : [ 0, 1, 2 ],
    "slots" : [ [ {
      "size" : 5,
      "color" : [ 255, 255, 255, 255 ]
    }, {
      "size" : 5,
      "color" : [ 255, 255, 0, 255 ]
    }, {
      "size" : 5,
      "color" : [ 0, 0, 0, 255 ]
    }, {
      "size" : 4,
      "color" : [ 255, 255, 255, 255 ]
    }, {
      "size" : 4,
      "color" : [ 255, 255, 0, 255 ]
    }, {
      "size" : 4,
      "color" : [ 0, 0, 0, 255 ]
    }, {
      "size" : 3,
      "color" : [ 255, 255, 255, 255 ]
    }, {
      "size" : 3,
      "color" : [ 255, 255, 0, 255 ]
    }, {
      "size" : 3,
      "color" : [ 0, 0, 0, 255 ]
    }, {
      "size" : 2,
      "color" : [ 255, 255, 255, 255 ]
    }, {
      "size" : 2,
      "color" : [ 255, 255, 0, 255 ]
    }, {
      "size" : 2,
      "color" : [ 0, 0, 0, 255 ]
    }, {
      "size" : 1,
      "color" : [ 255, 255, 255, 255 ]
    }, {
      "size" : 1,
      "color" : [ 255, 255, 0, 255 ]
    }, {
      "size" : 1,
      "color" : [ 0, 0, 0, 255 ]
    } ], [ ], [ ] ],
    "moveCount" : 0
  }, {
    "type" : "plm.universe.hanoi.HanoiWorld",
    "@jsonId" : 2,
    "name" : "moveStack(1,2,0)",
    "entities" : [ {
      "type" : "plm.universe.hanoi.HanoiEntity",
      "name" : "worker",
      "world" : 2,
      "inited" : false
    } ],
    "steps" : [ ],
    "about" : "<!-- Please don't translate this file but l10n/missions/plm.pot (see https://github.com/oster/PLM/wiki/Working-on-translations) -->\n<h1>HanoiWorld</h1>\n\n<p>\nThis world implements the ultra-classical Hanoi problem. You are asked\nto move the disk pile from the stick where they are to the target\nstick (given as second parameter in the world's name -- number 1 for\nthe default world). There is some extra constraint: you can only move\none disk at a time, and you cannot move a big disk over a smaller\none.</p>\n\n<p>Only 4 functions are provided:</p>\n\n<pre>void move(int src, int dst)</pre>\n\nMoves one disk from the stick <code>src</code> onto the stick\n<code>dst</code>. If you try to do an invalid move (like laying a disk\nover a smaller one), an IllegalArgumentException is thrown. \n\n<pre>int getSlotSize(int slot)</pre>\nReturns the amount of disks placed on the specified slot. This is mainly \nused to initialize the recursion and set the amount of recursive call to execute.\n\n<pre>int getSlotRadius(int slot)</pre>\nReturns the radius of the top-most disk of the specified slot.\n\n<pre>boolean isSelected()</pre>\nReturns whether the current world is selected in the graphical interface.\n",
    "parameters" : [ 1, 2, 0 ],
    "slots" : [ [ ], [ {
      "size" : 4,
      "color" : [ 255, 255, 255, 255 ]
    }, {
      "size" : 4,
      "color" : [ 255, 255, 0, 255 ]
    }, {
      "size" : 4,
      "color" : [ 0, 0, 0, 255 ]
    }, {
      "size" : 3,
      "color" : [ 255, 255, 255, 255 ]
    }, {
      "size" : 3,
      "color" : [ 255, 255, 0, 255 ]
    }, {
      "size" : 3,
      "color" : [ 0, 0, 0, 255 ]
    }, {
      "size" : 2,
      "color" : [ 255, 255, 255, 255 ]
    }, {
      "size" : 2,
      "color" : [ 255, 255, 0, 255 ]
    }, {
      "size" : 2,
      "color" : [ 0, 0, 0, 255 ]
    }, {
      "size" : 1,
      "color" : [ 255, 255, 255, 255 ]
    }, {
      "size" : 1,
      "color" : [ 255, 255, 0, 255 ]
    }, {
      "size" : 1,
      "color" : [ 0, 0, 0, 255 ]
    } ], [ ] ],
    "moveCount" : 0
  }, {
    "type" : "plm.universe.hanoi.HanoiWorld",
    "@jsonId" : 3,
    "name" : "moveStack(2,0,1)",
    "entities" : [ {
      "type" : "plm.universe.hanoi.HanoiEntity",
      "name" : "worker",
      "world" : 3,
      "inited" : false
    } ],
    "steps" : [ ],
    "about" : "<!-- Please don't translate this file but l10n/missions/plm.pot (see https://github.com/oster/PLM/wiki/Working-on-translations) -->\n<h1>HanoiWorld</h1>\n\n<p>\nThis world implements the ultra-classical Hanoi problem. You are asked\nto move the disk pile from the stick where they are to the target\nstick (given as second parameter in the world's name -- number 1 for\nthe default world). There is some extra constraint: you can only move\none disk at a time, and you cannot move a big disk over a smaller\none.</p>\n\n<p>Only 4 functions are provided:</p>\n\n<pre>void move(int src, int dst)</pre>\n\nMoves one disk from the stick <code>src</code> onto the stick\n<code>dst</code>. If you try to do an invalid move (like laying a disk\nover a smaller one), an IllegalArgumentException is thrown. \n\n<pre>int getSlotSize(int slot)</pre>\nReturns the amount of disks placed on the specified slot. This is mainly \nused to initialize the recursion and set the amount of recursive call to execute.\n\n<pre>int getSlotRadius(int slot)</pre>\nReturns the radius of the top-most disk of the specified slot.\n\n<pre>boolean isSelected()</pre>\nReturns whether the current world is selected in the graphical interface.\n",
    "parameters" : [ 2, 0, 1 ],
    "slots" : [ [ ], [ ], [ {
      "size" : 3,
      "color" : [ 255, 255, 255, 255 ]
    }, {
      "size" : 3,
      "color" : [ 255, 255, 0, 255 ]
    }, {
      "size" : 3,
      "color" : [ 0, 0, 0, 255 ]
    }, {
      "size" : 2,
      "color" : [ 255, 255, 255, 255 ]
    }, {
      "size" : 2,
      "color" : [ 255, 255, 0, 255 ]
    }, {
      "size" : 2,
      "color" : [ 0, 0, 0, 255 ]
    }, {
      "size" : 1,
      "color" : [ 255, 255, 255, 255 ]
    }, {
      "size" : 1,
      "color" : [ 255, 255, 0, 255 ]
    }, {
      "size" : 1,
      "color" : [ 0, 0, 0, 255 ]
    } ] ],
    "moveCount" : 0
  } ],
  "answerWorlds" : [ {
    "type" : "plm.universe.hanoi.HanoiWorld",
    "@jsonId" : 4,
    "name" : "moveStack(0,1,2)",
    "entities" : [ {
      "type" : "plm.universe.hanoi.HanoiEntity",
      "name" : "worker",
      "world" : 4,
      "inited" : true
    } ],
    "steps" : [ [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 5,
      "source" : 0,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 6,
      "source" : 0,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 7,
      "source" : 0,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 8,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 9,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 10,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 11,
      "source" : 2,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 12,
      "source" : 2,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 13,
      "source" : 2,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 14,
      "source" : 0,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 15,
      "source" : 0,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 16,
      "source" : 0,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 17,
      "source" : 1,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 18,
      "source" : 1,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 19,
      "source" : 1,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 20,
      "source" : 1,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 21,
      "source" : 1,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 22,
      "source" : 1,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 23,
      "source" : 0,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 24,
      "source" : 0,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 25,
      "source" : 0,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 26,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 27,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 28,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 29,
      "source" : 2,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 30,
      "source" : 2,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 31,
      "source" : 2,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 32,
      "source" : 2,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 33,
      "source" : 2,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 34,
      "source" : 2,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 35,
      "source" : 1,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 36,
      "source" : 1,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 37,
      "source" : 1,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 38,
      "source" : 2,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 39,
      "source" : 2,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 40,
      "source" : 2,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 41,
      "source" : 0,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 42,
      "source" : 0,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 43,
      "source" : 0,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 44,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 45,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 46,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 47,
      "source" : 2,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 48,
      "source" : 2,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 49,
      "source" : 2,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 50,
      "source" : 0,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 51,
      "source" : 0,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 52,
      "source" : 0,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 53,
      "source" : 1,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 54,
      "source" : 1,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 55,
      "source" : 1,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 56,
      "source" : 1,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 57,
      "source" : 1,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 58,
      "source" : 1,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 59,
      "source" : 0,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 60,
      "source" : 0,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 61,
      "source" : 0,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 62,
      "source" : 1,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 63,
      "source" : 1,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 64,
      "source" : 1,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 65,
      "source" : 2,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 66,
      "source" : 2,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 67,
      "source" : 2,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 68,
      "source" : 2,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 69,
      "source" : 2,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 70,
      "source" : 2,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 71,
      "source" : 1,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 72,
      "source" : 1,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 73,
      "source" : 1,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 74,
      "source" : 1,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 75,
      "source" : 1,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 76,
      "source" : 1,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 77,
      "source" : 0,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 78,
      "source" : 0,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 79,
      "source" : 0,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 80,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 81,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 82,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 83,
      "source" : 2,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 84,
      "source" : 2,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 85,
      "source" : 2,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 86,
      "source" : 0,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 87,
      "source" : 0,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 88,
      "source" : 0,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 89,
      "source" : 1,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 90,
      "source" : 1,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 91,
      "source" : 1,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 92,
      "source" : 1,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 93,
      "source" : 1,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 94,
      "source" : 1,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 95,
      "source" : 0,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 96,
      "source" : 0,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 97,
      "source" : 0,
      "destination" : 2,
      "name" : "hanoiMove"
    } ] ],
    "about" : "<!-- Please don't translate this file but l10n/missions/plm.pot (see https://github.com/oster/PLM/wiki/Working-on-translations) -->\n<h1>HanoiWorld</h1>\n\n<p>\nThis world implements the ultra-classical Hanoi problem. You are asked\nto move the disk pile from the stick where they are to the target\nstick (given as second parameter in the world's name -- number 1 for\nthe default world). There is some extra constraint: you can only move\none disk at a time, and you cannot move a big disk over a smaller\none.</p>\n\n<p>Only 4 functions are provided:</p>\n\n<pre>void move(int src, int dst)</pre>\n\nMoves one disk from the stick <code>src</code> onto the stick\n<code>dst</code>. If you try to do an invalid move (like laying a disk\nover a smaller one), an IllegalArgumentException is thrown. \n\n<pre>int getSlotSize(int slot)</pre>\nReturns the amount of disks placed on the specified slot. This is mainly \nused to initialize the recursion and set the amount of recursive call to execute.\n\n<pre>int getSlotRadius(int slot)</pre>\nReturns the radius of the top-most disk of the specified slot.\n\n<pre>boolean isSelected()</pre>\nReturns whether the current world is selected in the graphical interface.\n",
    "parameters" : [ 0, 1, 2 ],
    "slots" : [ [ ], [ ], [ {
      "size" : 5,
      "color" : [ 0, 0, 0, 255 ]
    }, {
      "size" : 5,
      "color" : [ 255, 255, 0, 255 ]
    }, {
      "size" : 5,
      "color" : [ 255, 255, 255, 255 ]
    }, {
      "size" : 4,
      "color" : [ 255, 255, 255, 255 ]
    }, {
      "size" : 4,
      "color" : [ 255, 255, 0, 255 ]
    }, {
      "size" : 4,
      "color" : [ 0, 0, 0, 255 ]
    }, {
      "size" : 3,
      "color" : [ 255, 255, 255, 255 ]
    }, {
      "size" : 3,
      "color" : [ 255, 255, 0, 255 ]
    }, {
      "size" : 3,
      "color" : [ 0, 0, 0, 255 ]
    }, {
      "size" : 2,
      "color" : [ 255, 255, 255, 255 ]
    }, {
      "size" : 2,
      "color" : [ 255, 255, 0, 255 ]
    }, {
      "size" : 2,
      "color" : [ 0, 0, 0, 255 ]
    }, {
      "size" : 1,
      "color" : [ 255, 255, 255, 255 ]
    }, {
      "size" : 1,
      "color" : [ 255, 255, 0, 255 ]
    }, {
      "size" : 1,
      "color" : [ 0, 0, 0, 255 ]
    } ] ],
    "moveCount" : 93
  }, {
    "type" : "plm.universe.hanoi.HanoiWorld",
    "@jsonId" : 98,
    "name" : "moveStack(1,2,0)",
    "entities" : [ {
      "type" : "plm.universe.hanoi.HanoiEntity",
      "name" : "worker",
      "world" : 98,
      "inited" : true
    } ],
    "steps" : [ [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 99,
      "source" : 1,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 100,
      "source" : 1,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 101,
      "source" : 1,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 102,
      "source" : 1,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 103,
      "source" : 1,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 104,
      "source" : 1,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 105,
      "source" : 2,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 106,
      "source" : 2,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 107,
      "source" : 2,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 108,
      "source" : 1,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 109,
      "source" : 1,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 110,
      "source" : 1,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 111,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 112,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 113,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 114,
      "source" : 0,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 115,
      "source" : 0,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 116,
      "source" : 0,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 117,
      "source" : 1,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 118,
      "source" : 1,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 119,
      "source" : 1,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 120,
      "source" : 1,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 121,
      "source" : 1,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 122,
      "source" : 1,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 123,
      "source" : 2,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 124,
      "source" : 2,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 125,
      "source" : 2,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 126,
      "source" : 2,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 127,
      "source" : 2,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 128,
      "source" : 2,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 129,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 130,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 131,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 132,
      "source" : 2,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 133,
      "source" : 2,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 134,
      "source" : 2,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 135,
      "source" : 1,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 136,
      "source" : 1,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 137,
      "source" : 1,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 138,
      "source" : 1,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 139,
      "source" : 1,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 140,
      "source" : 1,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 141,
      "source" : 2,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 142,
      "source" : 2,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 143,
      "source" : 2,
      "destination" : 0,
      "name" : "hanoiMove"
    } ] ],
    "about" : "<!-- Please don't translate this file but l10n/missions/plm.pot (see https://github.com/oster/PLM/wiki/Working-on-translations) -->\n<h1>HanoiWorld</h1>\n\n<p>\nThis world implements the ultra-classical Hanoi problem. You are asked\nto move the disk pile from the stick where they are to the target\nstick (given as second parameter in the world's name -- number 1 for\nthe default world). There is some extra constraint: you can only move\none disk at a time, and you cannot move a big disk over a smaller\none.</p>\n\n<p>Only 4 functions are provided:</p>\n\n<pre>void move(int src, int dst)</pre>\n\nMoves one disk from the stick <code>src</code> onto the stick\n<code>dst</code>. If you try to do an invalid move (like laying a disk\nover a smaller one), an IllegalArgumentException is thrown. \n\n<pre>int getSlotSize(int slot)</pre>\nReturns the amount of disks placed on the specified slot. This is mainly \nused to initialize the recursion and set the amount of recursive call to execute.\n\n<pre>int getSlotRadius(int slot)</pre>\nReturns the radius of the top-most disk of the specified slot.\n\n<pre>boolean isSelected()</pre>\nReturns whether the current world is selected in the graphical interface.\n",
    "parameters" : [ 1, 2, 0 ],
    "slots" : [ [ {
      "size" : 4,
      "color" : [ 0, 0, 0, 255 ]
    }, {
      "size" : 4,
      "color" : [ 255, 255, 0, 255 ]
    }, {
      "size" : 4,
      "color" : [ 255, 255, 255, 255 ]
    }, {
      "size" : 3,
      "color" : [ 255, 255, 255, 255 ]
    }, {
      "size" : 3,
      "color" : [ 255, 255, 0, 255 ]
    }, {
      "size" : 3,
      "color" : [ 0, 0, 0, 255 ]
    }, {
      "size" : 2,
      "color" : [ 255, 255, 255, 255 ]
    }, {
      "size" : 2,
      "color" : [ 255, 255, 0, 255 ]
    }, {
      "size" : 2,
      "color" : [ 0, 0, 0, 255 ]
    }, {
      "size" : 1,
      "color" : [ 255, 255, 255, 255 ]
    }, {
      "size" : 1,
      "color" : [ 255, 255, 0, 255 ]
    }, {
      "size" : 1,
      "color" : [ 0, 0, 0, 255 ]
    } ], [ ], [ ] ],
    "moveCount" : 45
  }, {
    "type" : "plm.universe.hanoi.HanoiWorld",
    "@jsonId" : 144,
    "name" : "moveStack(2,0,1)",
    "entities" : [ {
      "type" : "plm.universe.hanoi.HanoiEntity",
      "name" : "worker",
      "world" : 144,
      "inited" : true
    } ],
    "steps" : [ [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 145,
      "source" : 2,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 146,
      "source" : 2,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 147,
      "source" : 2,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 148,
      "source" : 2,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 149,
      "source" : 2,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 150,
      "source" : 2,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 151,
      "source" : 1,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 152,
      "source" : 1,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 153,
      "source" : 1,
      "destination" : 0,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 154,
      "source" : 2,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 155,
      "source" : 2,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 156,
      "source" : 2,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 157,
      "source" : 0,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 158,
      "source" : 0,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 159,
      "source" : 0,
      "destination" : 2,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 160,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 161,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 162,
      "source" : 0,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 163,
      "source" : 2,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 164,
      "source" : 2,
      "destination" : 1,
      "name" : "hanoiMove"
    } ], [ {
      "type" : "plm.universe.hanoi.operations.HanoiMove",
      "@jsonId" : 165,
      "source" : 2,
      "destination" : 1,
      "name" : "hanoiMove"
    } ] ],
    "about" : "<!-- Please don't translate this file but l10n/missions/plm.pot (see https://github.com/oster/PLM/wiki/Working-on-translations) -->\n<h1>HanoiWorld</h1>\n\n<p>\nThis world implements the ultra-classical Hanoi problem. You are asked\nto move the disk pile from the stick where they are to the target\nstick (given as second parameter in the world's name -- number 1 for\nthe default world). There is some extra constraint: you can only move\none disk at a time, and you cannot move a big disk over a smaller\none.</p>\n\n<p>Only 4 functions are provided:</p>\n\n<pre>void move(int src, int dst)</pre>\n\nMoves one disk from the stick <code>src</code> onto the stick\n<code>dst</code>. If you try to do an invalid move (like laying a disk\nover a smaller one), an IllegalArgumentException is thrown. \n\n<pre>int getSlotSize(int slot)</pre>\nReturns the amount of disks placed on the specified slot. This is mainly \nused to initialize the recursion and set the amount of recursive call to execute.\n\n<pre>int getSlotRadius(int slot)</pre>\nReturns the radius of the top-most disk of the specified slot.\n\n<pre>boolean isSelected()</pre>\nReturns whether the current world is selected in the graphical interface.\n",
    "parameters" : [ 2, 0, 1 ],
    "slots" : [ [ ], [ {
      "size" : 3,
      "color" : [ 0, 0, 0, 255 ]
    }, {
      "size" : 3,
      "color" : [ 255, 255, 0, 255 ]
    }, {
      "size" : 3,
      "color" : [ 255, 255, 255, 255 ]
    }, {
      "size" : 2,
      "color" : [ 255, 255, 255, 255 ]
    }, {
      "size" : 2,
      "color" : [ 255, 255, 0, 255 ]
    }, {
      "size" : 2,
      "color" : [ 0, 0, 0, 255 ]
    }, {
      "size" : 1,
      "color" : [ 255, 255, 255, 255 ]
    }, {
      "size" : 1,
      "color" : [ 255, 255, 0, 255 ]
    }, {
      "size" : 1,
      "color" : [ 0, 0, 0, 255 ]
    } ], [ ] ],
    "moveCount" : 21
  } ],
  "instructions" : {
    "en" : "<!-- Please don't translate this file but l10n/missions/plm.pot (see https://github.com/oster/PLM/wiki/Working-on-translations) -->\n<h2>Tricolor Hanoi: stack move</h2>\n\n<p>In this set of exercises, we will devise an algorithm for the Tricolor Hanoi problem.\nThere will be 3 stacks on 3 pegs, each stack of a differing color, and the problem is to\nexchange the stacks' positions under the classical move rules (one disk at a time, \nand no bigger disk over smaller disk).</p>\n\n<p>As in previous exercises, our solution will use three functions:</p>\n<ul>\n <li><code>move3(n, src, mid, dst)</code>: moves a stack of interleaved disks, ie a stack of (n*3) disks \n   of alternating colors from peg <code>src</code> to peg <code>dst</code>.</li>\n <li><code>gather()</code>: builds an interleaved stack from the regular split ones.</li>\n <li><code>scatter()</code>: splits an interleaved stack into several regular ones.</li>\n</ul>\n\n<p>The goal of this first exercise in the series is to devise the <code>move3()</code> function. \nThis starter task should not block you for too long, actually. It is ok if your function changes \nthe order of the bottom triplet of disks, but it must preserve the order of the other triplets.</p> \n",
    "fr" : "\n<!-- Please don't translate this file but l10n/missions/plm.pot (see https://github.com/oster/PLM/wiki/Working-on-translations) -->\n<h2>Tours de Hanoï tricolores : déplacer</h2>\n\n<p>Dans cette série d'exercices, nous allons mettre au point un algorithme pour\nle problème des tours de Hanoï tricolores. Il y aura trois piles de couleurs\ndifférentes sur trois piquets, et il s'agira d'échanger la position des\npiles en respectant les règles de mouvement habituelles (un disque à la\nfois, et pas de gros disques sur des petits disques).</p>\n\n<p>Comme précédement, notre solution sera basée sur trois fonctions :</p>\n<ul>\n <li><code>move3(n, src, mid, dst)</code>: déplace une pile de disques\ninterclassée, c'est-à-dire une pile de (n*3) disques de couleurs alternées,\ndepuis le piquet <code>src</code> jusqu'au piquet <code>dst</code>. </li>\n <li><code>rassemble()</code> : construit une pile interclassée à partir de trois\npiles séparées.</li>\n <li><code>repartis()</code> : démonte une pile interclassée en trois piles\nnormales.</li>\n</ul>\n\n<p>L'objectif de ce premier exercice de la série est d'écrire la fonction\n<code>move3()</code>. Cet échauffement ne devrait pas vous bloquer très\nlongtemps. Cela ne pose pas de problème si votre fonction change l'ordre des\ndisques du triplet du bas, mais les autres triplets doivent rester dans le\nmême ordre.</p> \n"
  }
}