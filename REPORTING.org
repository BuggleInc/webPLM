#+TITLE:     Reporting projet PLM
#+SUBTITLE:  M2 MIAGE
#+AUTHOR:    Camille BARBE, Jules COHONNER, Mehdi AZARO, Khaled BAOUZ
#+KEYWORDS:  plm, programming, machine, learning, project
#+LANGUAGE:  en, fr         |

* Findings/Découvertes

/Informations générales théoriques collectées tout au long du projet : informations bibliographiques/

http://people.irisa.fr/Martin.Quinson/Research/Publications/2015-itiCSE-plm.pdf

** Introduction section

/Présenter, expliquer l’intérêt et le problème en détail/

This file contains the reporting for our master's project done on this topic on that year.

*RESUME* : A Teaching System To Learn Programming: the Programmer’s Learning Machine

/Un système d’enseignement pour apprendre la programmation par Martin Quinson and Gérald Oster/

*Nom :* Programmer’s Learning Machine (PLM)

Logiciel gratuit d’enseignement

*Cible :* lycéens et étudiants qui apprennent la programmation et qui veulent des exercices pratiques pour apprendre. Elargissement aux plus jeunes aussi.

200 exercices sur les bases de la programmation, les algorithmes et la récursivité.


** Related work section

/Résumer et discuter ce que la source nous a permis d’apprendre et en quoi elle a aidé pour notre problème/

Comparatif Canvs/SVG : https://openweb.eu.org/articles/canvas_svg_que_choisir

** Contribution section

/Présenter les solutions choisies/

** Evaluation subsection

/Décrire les paramètres expérimentaux et commenter les figures pour présenter les conclusions/

* Développement

/Aspects techniques du travail/

** Data Provenance subsection

/Etapes des expérimentations/

** Data Analysis subsection

/Analyses/

* Journal

/Ecrire chaque étape du travail effectuée par jour, semaine/

** Week 45

*** Work planned
*Pour mercredi 8 novembre :*

- Dire quels univers fonctionnent ou pas

- Dessiner SVG de baseballWorld dans une application séparée qui permet de produire un fichier svg

    + Modifier World.runEntities pour générer des SVGOperations

- Modifier le JS pour recevoir et afficher les SVGOperations

- Quantifier la consommation de mémoire de 300 étapes de SVG + compressé en ZIP

- Quelles sont les autres solutions ?

    + animations Batik SMIL ?

    + Générer js à côté de Batik ?

*Pour mercredi 11 novembre :*

- Convertir, dessiner tous les univers

- Enlever le code devenu inutile dans le JS (qui gère univers et les dessine, pqs SVGUniverse)

- Simplifier un peu le protocole de la socket

*Pour lundi 18 décembre :*

- Rédiger le rapport (bien expliquer, pas de façon trop compliquée ou trop simple)

**** Team Java (Khaled, Jules) :

- [X] Résolution du problème de configuration de Jules : nécessecité d'importer le projet comme sbt project


**** Team JS (Mehdi, Camille) :
*06.11.17. :*

- [X] Créer un fichier SVG exemple (SVG.svg)

- [X] Générer HTML en JS (test.js)

- [X] Afficher SVG dans la page HTML (svg.html)

- [X] Reporting.org


*08.11.17. :*

- [X] Réunion avec Martin Quinson : cf Google drive

- [X] Etude du JS, mise en commentaire du JS non nécessaire

- [X] Chercher comment greffer l'affichage du SVG sur les fichiers existants

*09.11.17. :*

- [X] Fichier Moveoperation.factory.js : création de la fonction SVGOperation avec

    + var SVGOperation contenant juste un svg en paramètre (voir un vecteur de svg pour les 2 manières possibles d’afficher l’exercice)

    + fonction SVGOperation.apply

    + fonction SVGOperation.reverse


*10.11.17. :*

- [X] Modification de baseballview.factory.js :

    + Modifier function draw pour qu’elle affiche le SVG



*** Issues & Questions

- [JS] Comment les js et html se "branchent"-ils ensembles ? A quoi correspond le canvas ?

- [JS] public.app.exercice.exercice.html, "template" utilisé ?

- [JS] public.app.exercice.exercice.controller.js -> méthode initCanvas -> permet bien de modifier le dessin ? A la place du paramètre draw à la fin de canvas.init(), insérer le html pour insérer le fichier SVG ?

*** Next steps

** Week 46

*** Work planned
*Pour mercredi 29 novembre :*

- BASEBALLWORLD : Dessiner SVG de baseballWorld dans une application séparée qui permet de produire un fichier svg

    + Modifier World.runEntities pour générer des SVGOperations

- Dire quels univers fonctionnent ou pas

- Quantifier la consommation de mémoire de 300 étapes de SVG + compressé en ZIP

- Quelles sont les autres solutions ?

    + animations Batik SMIL ?

    + Générer js à côté de Batik ?

- Convertir, dessiner tous les univers

- Enlever le code devenu inutile dans le JS (qui gère univers et les dessine, pqs SVGUniverse)

- Simplifier un peu le protocole de la socket

*Pour lundi 18 décembre :*

- Rédiger le rapport (bien expliquer, pas de façon trop compliquée ou trop simple)

**** Team Java (Khaled, Jules) :


**** Team JS (Mehdi, Camille) :
*13.11.17. :*

- [X] Finition de baseballview.factory.js : utilisation de la balise html <svg> et non <object> qui n'affiche pas l'image svg

- [X] Team JS passe en Back



*** Issues & Questions

- [JS] Préciser les choses à effacer ou non

*** Next steps

* Conclusions

/Ecrit à la fin du projet pour décrire l’état actuel du travail et comment le reprendre à la prochaine personne ainsi que la partie technique et les prochaines étapes/

* Index

Index (or list of acronyms).

- Write index entries

#+index: Org-mode

  Note that multi-entry terms generate separate index entries.

#+index: Definitions!Org-mode

- Place the index at the desired location

- Produce the index by updating ~org-latex-pdf-process~

#+BIND: org-latex-pdf-process ("pdflatex %b" "bibtex %b" "pdflatex %b" "pdflatex %b")

* Bibliography

The bibliography...

- Eric Steven Raymond. The Art of Unix Programming. Addison-Wesley. ISBN
  0-13-142901-9.

# http://rmarkdown.rstudio.com/authoring_bibliographies_and_citations.html

* Glossary

Glossaries are optional.  Glossaries entries are an example of [[id:f1a4a242-755b-4c38-9280-ee3f60e2b29a][definition lists]].

- A glossary term ::
     The corresponding (indented) definition.

- A second glossary term ::
     The corresponding (indented) definition.